ARM GAS  C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.delay,"ax",%progbits
  19              		.align	1
  20              		.global	delay
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	delay:
  26              	.LVL0:
  27              	.LFB45:
  28              		.file 2 "Core/Inc/lcd_stm32f0.c"
   1:Core/Inc/lcd_stm32f0.c **** //********************************************************************
   2:Core/Inc/lcd_stm32f0.c **** //*                      EEE2046F STM32F0                            *
   3:Core/Inc/lcd_stm32f0.c **** //*                         LCD MODULE                               *
   4:Core/Inc/lcd_stm32f0.c **** //*==================================================================*
   5:Core/Inc/lcd_stm32f0.c **** //* WRITTEN BY:    Copyright (C) Samuel Ginsberg 2004                *
   6:Core/Inc/lcd_stm32f0.c **** //* PORTED TO STM32F0 dev board by James Gowans, 2014                *
   7:Core/Inc/lcd_stm32f0.c **** //* MODIFIED BY:   Robyn Verrinder                                   *
   8:Core/Inc/lcd_stm32f0.c **** //* DATE CREATED:  2004                                              *
   9:Core/Inc/lcd_stm32f0.c **** //* PORTED:	   2014						     *
  10:Core/Inc/lcd_stm32f0.c **** //* MODIFIED:      03-08-2015                                        *
  11:Core/Inc/lcd_stm32f0.c **** //*==================================================================*
  12:Core/Inc/lcd_stm32f0.c **** //* PROGRAMMED IN: ECLIPSE IDE Luna Service Release 1 (4.4.1)        *
  13:Core/Inc/lcd_stm32f0.c **** //* DEV. BOARD:    UCT STM32 Development Board                       *
  14:Core/Inc/lcd_stm32f0.c **** //* TARGET:	   STMicroelectronics STM32F051C6                    *
  15:Core/Inc/lcd_stm32f0.c **** //*==================================================================*
  16:Core/Inc/lcd_stm32f0.c **** //* DESCRIPTION:   This code contains common functions to communicate*
  17:Core/Inc/lcd_stm32f0.c **** //*                with the LCD module connected to the STM32 uC.    *
  18:Core/Inc/lcd_stm32f0.c **** //*==================================================================*
  19:Core/Inc/lcd_stm32f0.c **** //* LCD SETUP:     - 4 bit mode      (Upper 4 data lines D4-D7 used) *
  20:Core/Inc/lcd_stm32f0.c **** //*                - Two lines used                                  *
  21:Core/Inc/lcd_stm32f0.c **** //*                - Flashing cursor                                 *
  22:Core/Inc/lcd_stm32f0.c **** //*==================================================================*
  23:Core/Inc/lcd_stm32f0.c **** //* CONNECTIONS:                                                     *
  24:Core/Inc/lcd_stm32f0.c **** //*------------------------------------------------------------------*
  25:Core/Inc/lcd_stm32f0.c **** //* LCD PINS   | NAME                    | CONNECTED TO              *
  26:Core/Inc/lcd_stm32f0.c **** //*------------------------------------------------------------------*
  27:Core/Inc/lcd_stm32f0.c **** //* 1............VSS.......................GND                       *
  28:Core/Inc/lcd_stm32f0.c **** //* 2............VDD.......................+5V                       *
  29:Core/Inc/lcd_stm32f0.c **** //* 3............CONTRAST..................POT 2                     *
  30:Core/Inc/lcd_stm32f0.c **** //* 4............RS  - Register Select.....PC14 (LCD_RS)             *
ARM GAS  C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s 			page 2


  31:Core/Inc/lcd_stm32f0.c **** //* 5............RW  - Read/Write..........GND                       *
  32:Core/Inc/lcd_stm32f0.c **** //* 6............E   - Enable..............PC15 (LCD_E)              *
  33:Core/Inc/lcd_stm32f0.c **** //* 7............D0  - Data line 0.........GND                       *
  34:Core/Inc/lcd_stm32f0.c **** //* 8............D1  - Data line 1.........GND                       *
  35:Core/Inc/lcd_stm32f0.c **** //* 9............D2  - Data line 2.........GND                       *
  36:Core/Inc/lcd_stm32f0.c **** //* 10...........D3  - Data line 3.........GND                       *
  37:Core/Inc/lcd_stm32f0.c **** //* 11...........D4  - Data line 4.........PB8  (LCD_D4)             *
  38:Core/Inc/lcd_stm32f0.c **** //* 12...........D5  - Data line 5.........PB9  (LCD_D5)             *
  39:Core/Inc/lcd_stm32f0.c **** //* 13...........D6  - Data line 6.........PA12 (LCD_D6)             *
  40:Core/Inc/lcd_stm32f0.c **** //* 14...........D7  - Data line 7.........PA15 (LCD_D7)             *
  41:Core/Inc/lcd_stm32f0.c **** //* 15...........CATHLED...................NC                        *
  42:Core/Inc/lcd_stm32f0.c **** //* 16...........ANODELED..................NC                        *
  43:Core/Inc/lcd_stm32f0.c **** //********************************************************************
  44:Core/Inc/lcd_stm32f0.c **** // INCLUDE FILES
  45:Core/Inc/lcd_stm32f0.c **** //====================================================================
  46:Core/Inc/lcd_stm32f0.c **** #include "lcd_stm32f0.h"
  47:Core/Inc/lcd_stm32f0.c **** #include "stm32f0xx.h"
  48:Core/Inc/lcd_stm32f0.c **** //====================================================================
  49:Core/Inc/lcd_stm32f0.c **** // SEND COMMAND CODE TO LCD - LCD_Command(command)
  50:Core/Inc/lcd_stm32f0.c **** //====================================================================
  51:Core/Inc/lcd_stm32f0.c **** // DESCRIPTION: This function sends a command to the LCD. Care is taken
  52:Core/Inc/lcd_stm32f0.c **** //              not to interfere with the other lines on the port.
  53:Core/Inc/lcd_stm32f0.c **** //
  54:Core/Inc/lcd_stm32f0.c **** //              As we are using a microcontroller to control the LCD
  55:Core/Inc/lcd_stm32f0.c **** //              we use 4-bit mode to save on number of lines used to
  56:Core/Inc/lcd_stm32f0.c **** //              connect to the LCD. This means that an 8-bit command
  57:Core/Inc/lcd_stm32f0.c **** //              must be split into two sets of 4-bits (upper and lower)
  58:Core/Inc/lcd_stm32f0.c **** //              These sets must be transmitted
  59:Core/Inc/lcd_stm32f0.c **** //====================================================================
  60:Core/Inc/lcd_stm32f0.c **** // USEFUL COMMANDS:
  61:Core/Inc/lcd_stm32f0.c **** //                  - POWER_UP:      Power up initialization for the lcd
  62:Core/Inc/lcd_stm32f0.c **** //                  - FOURBIT_MODE:  Sets LCD for 4-bit mode
  63:Core/Inc/lcd_stm32f0.c **** //                  - TWOLINE_MODE:  Sets up 2 lines and character size
  64:Core/Inc/lcd_stm32f0.c **** //                  - SETUP_CURSOR:  Turn display on and set up cursor
  65:Core/Inc/lcd_stm32f0.c **** //                  - CLEAR:         Clear screen
  66:Core/Inc/lcd_stm32f0.c **** //                  - CURSOR_HOME:   Cursor home
  67:Core/Inc/lcd_stm32f0.c **** //                  - LINE_TWO:      Line 2
  68:Core/Inc/lcd_stm32f0.c **** //
  69:Core/Inc/lcd_stm32f0.c **** //====================================================================
  70:Core/Inc/lcd_stm32f0.c **** 
  71:Core/Inc/lcd_stm32f0.c **** void lcd_command(unsigned char command)
  72:Core/Inc/lcd_stm32f0.c **** {
  73:Core/Inc/lcd_stm32f0.c ****     GPIOC->BSRR |= LCD_RS_RESET;	// Register Select (RS)line low (data sent will now be read as com
  74:Core/Inc/lcd_stm32f0.c **** 
  75:Core/Inc/lcd_stm32f0.c **** // Put upper nibble (upper 4-bits) on data lines, command mode
  76:Core/Inc/lcd_stm32f0.c **** // DATALINE 7
  77:Core/Inc/lcd_stm32f0.c ****     if ((command & 0x80) != 0)		// Select bit 7 of command, if HIGH set Data line 7 (D7) 
  78:Core/Inc/lcd_stm32f0.c ****     {
  79:Core/Inc/lcd_stm32f0.c ****     	GPIOA->BSRR |= LCD_D7_SET;
  80:Core/Inc/lcd_stm32f0.c ****     }
  81:Core/Inc/lcd_stm32f0.c ****     else				// else RESET D7
  82:Core/Inc/lcd_stm32f0.c ****     {
  83:Core/Inc/lcd_stm32f0.c ****     	GPIOA->BSRR |= LCD_D7_RESET;
  84:Core/Inc/lcd_stm32f0.c ****     }
  85:Core/Inc/lcd_stm32f0.c **** // DATALINE 6
  86:Core/Inc/lcd_stm32f0.c ****     if ((command & 0x40) != 0)		// Select bit 6 of command, if HIGH set Data line 6 (D6) 
  87:Core/Inc/lcd_stm32f0.c ****     {
ARM GAS  C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s 			page 3


  88:Core/Inc/lcd_stm32f0.c ****         GPIOA->BSRR |= LCD_D6_SET;
  89:Core/Inc/lcd_stm32f0.c ****     }
  90:Core/Inc/lcd_stm32f0.c ****     else				// else RESET D6
  91:Core/Inc/lcd_stm32f0.c ****     {
  92:Core/Inc/lcd_stm32f0.c ****         GPIOA->BSRR |= LCD_D6_RESET;
  93:Core/Inc/lcd_stm32f0.c ****     }
  94:Core/Inc/lcd_stm32f0.c **** // DATALINE 5
  95:Core/Inc/lcd_stm32f0.c ****     if ((command & 0x20) != 0)		// Select bit 5 of command, if HIGH set Data line 5 (D5)
  96:Core/Inc/lcd_stm32f0.c ****     {
  97:Core/Inc/lcd_stm32f0.c ****     	GPIOB->BSRR |= LCD_D5_SET;	
  98:Core/Inc/lcd_stm32f0.c ****     }
  99:Core/Inc/lcd_stm32f0.c ****     else				// else RESET D5
 100:Core/Inc/lcd_stm32f0.c ****     {
 101:Core/Inc/lcd_stm32f0.c ****     	GPIOB->BSRR |= LCD_D5_RESET;
 102:Core/Inc/lcd_stm32f0.c ****     }
 103:Core/Inc/lcd_stm32f0.c **** // DATALINE 4
 104:Core/Inc/lcd_stm32f0.c ****     if ((command & 0x10) != 0)		// Select bit 4 of command, if HIGH set Data line 4 (D4)
 105:Core/Inc/lcd_stm32f0.c ****     {
 106:Core/Inc/lcd_stm32f0.c ****     	GPIOB->BSRR |= LCD_D4_SET;
 107:Core/Inc/lcd_stm32f0.c ****     }
 108:Core/Inc/lcd_stm32f0.c ****     else				//  else RESET D4
 109:Core/Inc/lcd_stm32f0.c ****     {
 110:Core/Inc/lcd_stm32f0.c ****     	GPIOB->BSRR |= LCD_D4_RESET;
 111:Core/Inc/lcd_stm32f0.c ****     }
 112:Core/Inc/lcd_stm32f0.c **** 
 113:Core/Inc/lcd_stm32f0.c ****     pulse_strobe ();			// Send data
 114:Core/Inc/lcd_stm32f0.c **** 
 115:Core/Inc/lcd_stm32f0.c **** // lower nibble to data lines
 116:Core/Inc/lcd_stm32f0.c ****     if ((command & 0x08) != 0)		// Select bit 3 of command, if HIGH set Data line 7 (D7) 
 117:Core/Inc/lcd_stm32f0.c ****     {
 118:Core/Inc/lcd_stm32f0.c ****     	GPIOA->BSRR |= LCD_D7_SET;
 119:Core/Inc/lcd_stm32f0.c ****     }
 120:Core/Inc/lcd_stm32f0.c ****     else				// else RESET D7
 121:Core/Inc/lcd_stm32f0.c ****     {
 122:Core/Inc/lcd_stm32f0.c ****     	GPIOA->BSRR |= LCD_D7_RESET;
 123:Core/Inc/lcd_stm32f0.c ****     }
 124:Core/Inc/lcd_stm32f0.c **** // DATALINE 6
 125:Core/Inc/lcd_stm32f0.c ****     if ((command & 0x04) != 0)		// Select bit 2 of command, if HIGH set Data line 6 (D6)
 126:Core/Inc/lcd_stm32f0.c ****     {
 127:Core/Inc/lcd_stm32f0.c ****         GPIOA->BSRR |= LCD_D6_SET;
 128:Core/Inc/lcd_stm32f0.c ****     }
 129:Core/Inc/lcd_stm32f0.c ****     else				//  else RESET D6
 130:Core/Inc/lcd_stm32f0.c ****     {
 131:Core/Inc/lcd_stm32f0.c ****         GPIOA->BSRR |= LCD_D6_RESET;
 132:Core/Inc/lcd_stm32f0.c ****     }
 133:Core/Inc/lcd_stm32f0.c ****     // DATALINE 5
 134:Core/Inc/lcd_stm32f0.c ****     if ((command & 0x02) != 0)		// Select bit 1 of command, if HIGH set Data line 5 (D5)
 135:Core/Inc/lcd_stm32f0.c ****     {
 136:Core/Inc/lcd_stm32f0.c ****     	GPIOB->BSRR |= LCD_D5_SET;         
 137:Core/Inc/lcd_stm32f0.c ****     }
 138:Core/Inc/lcd_stm32f0.c ****     else				//  else RESET D5
 139:Core/Inc/lcd_stm32f0.c ****     {
 140:Core/Inc/lcd_stm32f0.c ****     	GPIOB->BSRR |= LCD_D5_RESET;
 141:Core/Inc/lcd_stm32f0.c ****     }
 142:Core/Inc/lcd_stm32f0.c ****     // DATALINE 4
 143:Core/Inc/lcd_stm32f0.c ****     if ((command & 0x01) != 0)		// Select bit 0 of command, if HIGH set Data line 4 (D4)
 144:Core/Inc/lcd_stm32f0.c ****     {
ARM GAS  C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s 			page 4


 145:Core/Inc/lcd_stm32f0.c ****     	GPIOB->BSRR |= LCD_D4_SET;
 146:Core/Inc/lcd_stm32f0.c ****     }
 147:Core/Inc/lcd_stm32f0.c ****     else				//  else RESET D4
 148:Core/Inc/lcd_stm32f0.c ****     {
 149:Core/Inc/lcd_stm32f0.c ****     	GPIOB->BSRR |= LCD_D4_RESET;
 150:Core/Inc/lcd_stm32f0.c ****     }
 151:Core/Inc/lcd_stm32f0.c **** 
 152:Core/Inc/lcd_stm32f0.c ****     pulse_strobe();			// Send data
 153:Core/Inc/lcd_stm32f0.c ****     delay(3000);
 154:Core/Inc/lcd_stm32f0.c **** }
 155:Core/Inc/lcd_stm32f0.c **** 
 156:Core/Inc/lcd_stm32f0.c **** //====================================================================
 157:Core/Inc/lcd_stm32f0.c **** // INITIALISE LCD - LCD_Init()
 158:Core/Inc/lcd_stm32f0.c **** //====================================================================
 159:Core/Inc/lcd_stm32f0.c **** // DESCRIPTION: This function sets up the port lines for the LCD and
 160:Core/Inc/lcd_stm32f0.c **** //              intialises the module for use.
 161:Core/Inc/lcd_stm32f0.c **** //====================================================================
 162:Core/Inc/lcd_stm32f0.c **** // LCD SETUP:     - 4 bit mode      (Upper 4 data lines D4-D7 used)
 163:Core/Inc/lcd_stm32f0.c **** //                - Two lines used
 164:Core/Inc/lcd_stm32f0.c **** //                - Flashing cursor
 165:Core/Inc/lcd_stm32f0.c **** //====================================================================
 166:Core/Inc/lcd_stm32f0.c **** 
 167:Core/Inc/lcd_stm32f0.c **** void init_LCD(void)
 168:Core/Inc/lcd_stm32f0.c **** {
 169:Core/Inc/lcd_stm32f0.c ****     RCC->AHBENR |= RCC_AHBENR_GPIOAEN;	// Connect clocks to GPIO A, B and C
 170:Core/Inc/lcd_stm32f0.c ****     RCC->AHBENR |= RCC_AHBENR_GPIOBEN;
 171:Core/Inc/lcd_stm32f0.c ****     RCC->AHBENR |= RCC_AHBENR_GPIOCEN;
 172:Core/Inc/lcd_stm32f0.c **** 
 173:Core/Inc/lcd_stm32f0.c ****     GPIOA->MODER |= (GPIO_MODER_MODER12_0|GPIO_MODER_MODER15_0); // D6 and D7
 174:Core/Inc/lcd_stm32f0.c ****     GPIOB->MODER |= (GPIO_MODER_MODER8_0|GPIO_MODER_MODER9_0);   // D4 and D5
 175:Core/Inc/lcd_stm32f0.c ****     GPIOC->MODER |= (GPIO_MODER_MODER14_0|GPIO_MODER_MODER15_0); // RS and EN
 176:Core/Inc/lcd_stm32f0.c **** 
 177:Core/Inc/lcd_stm32f0.c ****     delay(30000);			// Allow the LCD some power up time (~30ms)
 178:Core/Inc/lcd_stm32f0.c **** 
 179:Core/Inc/lcd_stm32f0.c ****     lcd_command(POWER_UP);		// Power up initialization for the lcd
 180:Core/Inc/lcd_stm32f0.c ****     lcd_command(FOURBIT_MODE);		// Set LCD into 4 bit mode
 181:Core/Inc/lcd_stm32f0.c ****     lcd_command(DISPLAY_ON);		// Turn display on and set up cursor
 182:Core/Inc/lcd_stm32f0.c ****     lcd_command(TWOLINE_MODE);		// Set up 2 lines and character size
 183:Core/Inc/lcd_stm32f0.c ****     lcd_command(CLEAR);			// Clear display
 184:Core/Inc/lcd_stm32f0.c **** }
 185:Core/Inc/lcd_stm32f0.c **** 
 186:Core/Inc/lcd_stm32f0.c **** //====================================================================
 187:Core/Inc/lcd_stm32f0.c **** // WRITE A SINGLE CHARACTER TO THE LCD - LCD_PutChar(character)
 188:Core/Inc/lcd_stm32f0.c **** //====================================================================
 189:Core/Inc/lcd_stm32f0.c **** // DESCRIPTION: Puts a single character on the LCD at the next position
 190:Core/Inc/lcd_stm32f0.c **** //              on the screen. The character to be printed is in the input
 191:Core/Inc/lcd_stm32f0.c **** //              parameter. For numbers, letters and other common characters
 192:Core/Inc/lcd_stm32f0.c **** //              the ASCII code will produce correct display.
 193:Core/Inc/lcd_stm32f0.c **** //
 194:Core/Inc/lcd_stm32f0.c **** //              Refer to the Hitachi HD44780 datasheet for full character
 195:Core/Inc/lcd_stm32f0.c **** //              set information.
 196:Core/Inc/lcd_stm32f0.c **** //====================================================================
 197:Core/Inc/lcd_stm32f0.c **** 
 198:Core/Inc/lcd_stm32f0.c ****  void lcd_putchar(unsigned char character)
 199:Core/Inc/lcd_stm32f0.c **** {
 200:Core/Inc/lcd_stm32f0.c **** 	GPIOC->BSRR |= LCD_RS_SET;	// Register Select (RS) line HIGH (data sent will now be read as text);
 201:Core/Inc/lcd_stm32f0.c **** // Put upper nibble (upper 4-bits) on data lines, command mode
ARM GAS  C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s 			page 5


 202:Core/Inc/lcd_stm32f0.c **** // DATALINE 7
 203:Core/Inc/lcd_stm32f0.c ****         if ((character & 0x80) != 0) 	// Select bit 7 of command, if HIGH set Data line 7 (D7)
 204:Core/Inc/lcd_stm32f0.c ****         {
 205:Core/Inc/lcd_stm32f0.c ****         	GPIOA->BSRR |= LCD_D7_SET;
 206:Core/Inc/lcd_stm32f0.c ****         }
 207:Core/Inc/lcd_stm32f0.c ****         else				//  else RESET D7
 208:Core/Inc/lcd_stm32f0.c ****         {
 209:Core/Inc/lcd_stm32f0.c ****         	GPIOA->BSRR |= LCD_D7_RESET;
 210:Core/Inc/lcd_stm32f0.c ****         }
 211:Core/Inc/lcd_stm32f0.c ****         // DATALINE 6
 212:Core/Inc/lcd_stm32f0.c ****         if ((character & 0x40) != 0)	// Select bit 6 of command, if HIGH set Data line 6 (D6)      
 213:Core/Inc/lcd_stm32f0.c **** 	{
 214:Core/Inc/lcd_stm32f0.c ****             GPIOA->BSRR |= LCD_D6_SET;
 215:Core/Inc/lcd_stm32f0.c ****         }
 216:Core/Inc/lcd_stm32f0.c ****         else				//  else RESET D6
 217:Core/Inc/lcd_stm32f0.c **** 
 218:Core/Inc/lcd_stm32f0.c ****         {
 219:Core/Inc/lcd_stm32f0.c ****             GPIOA->BSRR |= LCD_D6_RESET;
 220:Core/Inc/lcd_stm32f0.c ****         }
 221:Core/Inc/lcd_stm32f0.c **** // DATALINE 5
 222:Core/Inc/lcd_stm32f0.c ****         if ((character & 0x20) != 0)	// Select bit 5 of command, if HIGH set Data line 5 (D5)
 223:Core/Inc/lcd_stm32f0.c **** 
 224:Core/Inc/lcd_stm32f0.c ****         {
 225:Core/Inc/lcd_stm32f0.c ****         	GPIOB->BSRR |= LCD_D5_SET;                 
 226:Core/Inc/lcd_stm32f0.c **** 	}
 227:Core/Inc/lcd_stm32f0.c ****         else				//  else RESET D5
 228:Core/Inc/lcd_stm32f0.c ****         {
 229:Core/Inc/lcd_stm32f0.c ****         	GPIOB->BSRR |= LCD_D5_RESET;
 230:Core/Inc/lcd_stm32f0.c ****         }
 231:Core/Inc/lcd_stm32f0.c **** // DATALINE 4
 232:Core/Inc/lcd_stm32f0.c ****         if ((character & 0x10) != 0)	// Select bit 4 of command, if HIGH set Data line 4 (D4) 
 233:Core/Inc/lcd_stm32f0.c ****         {
 234:Core/Inc/lcd_stm32f0.c ****         	GPIOB->BSRR |= LCD_D4_SET;
 235:Core/Inc/lcd_stm32f0.c ****         }
 236:Core/Inc/lcd_stm32f0.c ****         else				// else RESET D4
 237:Core/Inc/lcd_stm32f0.c ****         {
 238:Core/Inc/lcd_stm32f0.c ****         	GPIOB->BSRR |= LCD_D4_RESET;
 239:Core/Inc/lcd_stm32f0.c ****         }
 240:Core/Inc/lcd_stm32f0.c **** 
 241:Core/Inc/lcd_stm32f0.c ****         pulse_strobe ();		// Send data
 242:Core/Inc/lcd_stm32f0.c **** 
 243:Core/Inc/lcd_stm32f0.c **** // lower nibble to data lines
 244:Core/Inc/lcd_stm32f0.c ****         if ((character & 0x08) != 0)	// Select bit 3 of command, if HIGH set Data line 7 (D7) 
 245:Core/Inc/lcd_stm32f0.c ****         {
 246:Core/Inc/lcd_stm32f0.c ****         	GPIOA->BSRR |= LCD_D7_SET;
 247:Core/Inc/lcd_stm32f0.c ****         }
 248:Core/Inc/lcd_stm32f0.c ****         else				// else RESET D7
 249:Core/Inc/lcd_stm32f0.c ****         {
 250:Core/Inc/lcd_stm32f0.c ****         	GPIOA->BSRR |= LCD_D7_RESET;
 251:Core/Inc/lcd_stm32f0.c ****         }
 252:Core/Inc/lcd_stm32f0.c **** // DATALINE 6
 253:Core/Inc/lcd_stm32f0.c ****         if ((character & 0x04) != 0)	// Select bit 2 of command, if HIGH set Data line 6 (D6)      
 254:Core/Inc/lcd_stm32f0.c **** 	{
 255:Core/Inc/lcd_stm32f0.c ****             GPIOA->BSRR |= LCD_D6_SET;
 256:Core/Inc/lcd_stm32f0.c ****         }
 257:Core/Inc/lcd_stm32f0.c ****         else				// else RESET D6
 258:Core/Inc/lcd_stm32f0.c **** 
ARM GAS  C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s 			page 6


 259:Core/Inc/lcd_stm32f0.c ****         {
 260:Core/Inc/lcd_stm32f0.c ****             GPIOA->BSRR |= LCD_D6_RESET;
 261:Core/Inc/lcd_stm32f0.c ****         }
 262:Core/Inc/lcd_stm32f0.c **** // DATALINE 5
 263:Core/Inc/lcd_stm32f0.c ****         if ((character & 0x02) != 0)	// Select bit 1 of command, if HIGH set Data line 5 (D5)  
 264:Core/Inc/lcd_stm32f0.c ****         {
 265:Core/Inc/lcd_stm32f0.c ****         	GPIOB->BSRR |= LCD_D5_SET;       
 266:Core/Inc/lcd_stm32f0.c **** 	}
 267:Core/Inc/lcd_stm32f0.c ****         else				// else RESET D5
 268:Core/Inc/lcd_stm32f0.c ****         {
 269:Core/Inc/lcd_stm32f0.c ****         	GPIOB->BSRR |= LCD_D5_RESET;
 270:Core/Inc/lcd_stm32f0.c ****         }
 271:Core/Inc/lcd_stm32f0.c **** // DATALINE 4
 272:Core/Inc/lcd_stm32f0.c ****         if ((character & 0x01) != 0)	// Select bit 0 of command, if HIGH set Data line 4 (D4)
 273:Core/Inc/lcd_stm32f0.c ****         {
 274:Core/Inc/lcd_stm32f0.c ****         	GPIOB->BSRR |= LCD_D4_SET;
 275:Core/Inc/lcd_stm32f0.c ****         }
 276:Core/Inc/lcd_stm32f0.c ****         else				//  else RESET D4
 277:Core/Inc/lcd_stm32f0.c ****         {
 278:Core/Inc/lcd_stm32f0.c ****         	GPIOB->BSRR |= LCD_D4_RESET;
 279:Core/Inc/lcd_stm32f0.c ****         }
 280:Core/Inc/lcd_stm32f0.c **** 
 281:Core/Inc/lcd_stm32f0.c ****         pulse_strobe();			// Send data
 282:Core/Inc/lcd_stm32f0.c **** }
 283:Core/Inc/lcd_stm32f0.c **** 
 284:Core/Inc/lcd_stm32f0.c **** //====================================================================
 285:Core/Inc/lcd_stm32f0.c **** // WRITE A STRING TO THE LCD - LCD_PutString(ptr_String)
 286:Core/Inc/lcd_stm32f0.c **** //====================================================================
 287:Core/Inc/lcd_stm32f0.c **** // DESCRIPTION: Writes a string to the LCD
 288:Core/Inc/lcd_stm32f0.c **** //====================================================================
 289:Core/Inc/lcd_stm32f0.c **** 
 290:Core/Inc/lcd_stm32f0.c **** void lcd_putstring(char *instring)
 291:Core/Inc/lcd_stm32f0.c **** {
 292:Core/Inc/lcd_stm32f0.c ****     unsigned char count = 0;
 293:Core/Inc/lcd_stm32f0.c **** 
 294:Core/Inc/lcd_stm32f0.c ****     while (instring[count])		// Until the null terminator is reached
 295:Core/Inc/lcd_stm32f0.c ****     {
 296:Core/Inc/lcd_stm32f0.c ****     	lcd_putchar(instring[count]);	// Write each character to LCD
 297:Core/Inc/lcd_stm32f0.c **** 	    count++;
 298:Core/Inc/lcd_stm32f0.c **** 	 }
 299:Core/Inc/lcd_stm32f0.c **** }
 300:Core/Inc/lcd_stm32f0.c **** 
 301:Core/Inc/lcd_stm32f0.c **** 
 302:Core/Inc/lcd_stm32f0.c **** //====================================================================
 303:Core/Inc/lcd_stm32f0.c **** // PULSE STROBE - Pulse_Strobe()
 304:Core/Inc/lcd_stm32f0.c **** //====================================================================
 305:Core/Inc/lcd_stm32f0.c **** // DESCRIPTION: Pulse the strobe line of the LCD to indicate that data is ready.
 306:Core/Inc/lcd_stm32f0.c **** //====================================================================
 307:Core/Inc/lcd_stm32f0.c **** 
 308:Core/Inc/lcd_stm32f0.c **** void pulse_strobe(void)
 309:Core/Inc/lcd_stm32f0.c **** {
 310:Core/Inc/lcd_stm32f0.c ****     delay(20);				// Delay
 311:Core/Inc/lcd_stm32f0.c **** 
 312:Core/Inc/lcd_stm32f0.c ****     GPIOC->BSRR |= LCD_EN_SET;		// pull E (PC15) HIGH
 313:Core/Inc/lcd_stm32f0.c **** 
 314:Core/Inc/lcd_stm32f0.c ****     delay(20);				// Delay
 315:Core/Inc/lcd_stm32f0.c **** 
ARM GAS  C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s 			page 7


 316:Core/Inc/lcd_stm32f0.c ****     GPIOC->BSRR |= LCD_EN_RESET;	// Take EN LOW
 317:Core/Inc/lcd_stm32f0.c **** 
 318:Core/Inc/lcd_stm32f0.c ****     delay(20);				// Delay
 319:Core/Inc/lcd_stm32f0.c **** 
 320:Core/Inc/lcd_stm32f0.c ****     GPIOC->BSRR |= LCD_EN_SET;		// Take EN HIGH
 321:Core/Inc/lcd_stm32f0.c **** }
 322:Core/Inc/lcd_stm32f0.c **** 
 323:Core/Inc/lcd_stm32f0.c **** 
 324:Core/Inc/lcd_stm32f0.c **** //====================================================================
 325:Core/Inc/lcd_stm32f0.c **** // LOOP DELAY - delay(microseconds)
 326:Core/Inc/lcd_stm32f0.c **** //====================================================================
 327:Core/Inc/lcd_stm32f0.c **** // DESCRIPTION: A delay used by the LCD functions.
 328:Core/Inc/lcd_stm32f0.c **** //====================================================================
 329:Core/Inc/lcd_stm32f0.c **** 
 330:Core/Inc/lcd_stm32f0.c **** void delay(unsigned int microseconds)
 331:Core/Inc/lcd_stm32f0.c **** {
  29              		.loc 2 331 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 8
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              		.loc 2 331 1 is_stmt 0 view .LVU1
  35 0000 82B0     		sub	sp, sp, #8
  36              		.cfi_def_cfa_offset 8
 332:Core/Inc/lcd_stm32f0.c **** 	  volatile unsigned int counter;
  37              		.loc 2 332 4 is_stmt 1 view .LVU2
 333:Core/Inc/lcd_stm32f0.c **** 	  microseconds *= 3;
  38              		.loc 2 333 4 view .LVU3
  39              		.loc 2 333 17 is_stmt 0 view .LVU4
  40 0002 4300     		lsls	r3, r0, #1
  41 0004 1818     		adds	r0, r3, r0
  42              	.LVL1:
 334:Core/Inc/lcd_stm32f0.c **** 	  for(counter = 0; counter<microseconds; counter++)
  43              		.loc 2 334 4 is_stmt 1 view .LVU5
  44              		.loc 2 334 16 is_stmt 0 view .LVU6
  45 0006 0023     		movs	r3, #0
  46 0008 0193     		str	r3, [sp, #4]
  47              		.loc 2 334 4 view .LVU7
  48 000a 04E0     		b	.L2
  49              	.L3:
 335:Core/Inc/lcd_stm32f0.c **** 	  {
 336:Core/Inc/lcd_stm32f0.c **** 	    __asm("nop");
  50              		.loc 2 336 6 is_stmt 1 view .LVU8
  51              		.syntax divided
  52              	@ 336 "Core/Inc/lcd_stm32f0.c" 1
  53 000c C046     		nop
  54              	@ 0 "" 2
 337:Core/Inc/lcd_stm32f0.c **** 	    __asm("nop");
  55              		.loc 2 337 6 view .LVU9
  56              	@ 337 "Core/Inc/lcd_stm32f0.c" 1
  57 000e C046     		nop
  58              	@ 0 "" 2
 334:Core/Inc/lcd_stm32f0.c **** 	  for(counter = 0; counter<microseconds; counter++)
  59              		.loc 2 334 50 discriminator 3 view .LVU10
  60              		.thumb
  61              		.syntax unified
  62 0010 019B     		ldr	r3, [sp, #4]
ARM GAS  C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s 			page 8


  63 0012 0133     		adds	r3, r3, #1
  64 0014 0193     		str	r3, [sp, #4]
  65              	.L2:
 334:Core/Inc/lcd_stm32f0.c **** 	  for(counter = 0; counter<microseconds; counter++)
  66              		.loc 2 334 28 discriminator 1 view .LVU11
  67 0016 019B     		ldr	r3, [sp, #4]
  68 0018 8342     		cmp	r3, r0
  69 001a F7D3     		bcc	.L3
 338:Core/Inc/lcd_stm32f0.c **** 	  }
 339:Core/Inc/lcd_stm32f0.c **** }
  70              		.loc 2 339 1 is_stmt 0 view .LVU12
  71 001c 02B0     		add	sp, sp, #8
  72              		@ sp needed
  73 001e 7047     		bx	lr
  74              		.cfi_endproc
  75              	.LFE45:
  77              		.section	.text.pulse_strobe,"ax",%progbits
  78              		.align	1
  79              		.global	pulse_strobe
  80              		.syntax unified
  81              		.code	16
  82              		.thumb_func
  84              	pulse_strobe:
  85              	.LFB44:
 309:Core/Inc/lcd_stm32f0.c ****     delay(20);				// Delay
  86              		.loc 2 309 1 is_stmt 1 view -0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 0
  89              		@ frame_needed = 0, uses_anonymous_args = 0
  90 0000 70B5     		push	{r4, r5, r6, lr}
  91              		.cfi_def_cfa_offset 16
  92              		.cfi_offset 4, -16
  93              		.cfi_offset 5, -12
  94              		.cfi_offset 6, -8
  95              		.cfi_offset 14, -4
 310:Core/Inc/lcd_stm32f0.c **** 
  96              		.loc 2 310 5 view .LVU14
  97 0002 1420     		movs	r0, #20
  98 0004 FFF7FEFF 		bl	delay
  99              	.LVL2:
 312:Core/Inc/lcd_stm32f0.c **** 
 100              		.loc 2 312 5 view .LVU15
 312:Core/Inc/lcd_stm32f0.c **** 
 101              		.loc 2 312 10 is_stmt 0 view .LVU16
 102 0008 0A4C     		ldr	r4, .L5
 103 000a A369     		ldr	r3, [r4, #24]
 312:Core/Inc/lcd_stm32f0.c **** 
 104              		.loc 2 312 17 view .LVU17
 105 000c 8025     		movs	r5, #128
 106 000e 2D02     		lsls	r5, r5, #8
 107 0010 2B43     		orrs	r3, r5
 108 0012 A361     		str	r3, [r4, #24]
 314:Core/Inc/lcd_stm32f0.c **** 
 109              		.loc 2 314 5 is_stmt 1 view .LVU18
 110 0014 1420     		movs	r0, #20
 111 0016 FFF7FEFF 		bl	delay
 112              	.LVL3:
ARM GAS  C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s 			page 9


 316:Core/Inc/lcd_stm32f0.c **** 
 113              		.loc 2 316 5 view .LVU19
 316:Core/Inc/lcd_stm32f0.c **** 
 114              		.loc 2 316 10 is_stmt 0 view .LVU20
 115 001a A269     		ldr	r2, [r4, #24]
 316:Core/Inc/lcd_stm32f0.c **** 
 116              		.loc 2 316 17 view .LVU21
 117 001c 8023     		movs	r3, #128
 118 001e 1B06     		lsls	r3, r3, #24
 119 0020 1343     		orrs	r3, r2
 120 0022 A361     		str	r3, [r4, #24]
 318:Core/Inc/lcd_stm32f0.c **** 
 121              		.loc 2 318 5 is_stmt 1 view .LVU22
 122 0024 1420     		movs	r0, #20
 123 0026 FFF7FEFF 		bl	delay
 124              	.LVL4:
 320:Core/Inc/lcd_stm32f0.c **** }
 125              		.loc 2 320 5 view .LVU23
 320:Core/Inc/lcd_stm32f0.c **** }
 126              		.loc 2 320 10 is_stmt 0 view .LVU24
 127 002a A369     		ldr	r3, [r4, #24]
 320:Core/Inc/lcd_stm32f0.c **** }
 128              		.loc 2 320 17 view .LVU25
 129 002c 1D43     		orrs	r5, r3
 130 002e A561     		str	r5, [r4, #24]
 321:Core/Inc/lcd_stm32f0.c **** 
 131              		.loc 2 321 1 view .LVU26
 132              		@ sp needed
 133 0030 70BD     		pop	{r4, r5, r6, pc}
 134              	.L6:
 135 0032 C046     		.align	2
 136              	.L5:
 137 0034 00080048 		.word	1207961600
 138              		.cfi_endproc
 139              	.LFE44:
 141              		.section	.text.lcd_putchar,"ax",%progbits
 142              		.align	1
 143              		.global	lcd_putchar
 144              		.syntax unified
 145              		.code	16
 146              		.thumb_func
 148              	lcd_putchar:
 149              	.LVL5:
 150              	.LFB42:
 199:Core/Inc/lcd_stm32f0.c **** 	GPIOC->BSRR |= LCD_RS_SET;	// Register Select (RS) line HIGH (data sent will now be read as text);
 151              		.loc 2 199 1 is_stmt 1 view -0
 152              		.cfi_startproc
 153              		@ args = 0, pretend = 0, frame = 0
 154              		@ frame_needed = 0, uses_anonymous_args = 0
 199:Core/Inc/lcd_stm32f0.c **** 	GPIOC->BSRR |= LCD_RS_SET;	// Register Select (RS) line HIGH (data sent will now be read as text);
 155              		.loc 2 199 1 is_stmt 0 view .LVU28
 156 0000 10B5     		push	{r4, lr}
 157              		.cfi_def_cfa_offset 8
 158              		.cfi_offset 4, -8
 159              		.cfi_offset 14, -4
 160 0002 0400     		movs	r4, r0
 200:Core/Inc/lcd_stm32f0.c **** // Put upper nibble (upper 4-bits) on data lines, command mode
ARM GAS  C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s 			page 10


 161              		.loc 2 200 2 is_stmt 1 view .LVU29
 200:Core/Inc/lcd_stm32f0.c **** // Put upper nibble (upper 4-bits) on data lines, command mode
 162              		.loc 2 200 7 is_stmt 0 view .LVU30
 163 0004 454A     		ldr	r2, .L25
 164 0006 9169     		ldr	r1, [r2, #24]
 200:Core/Inc/lcd_stm32f0.c **** // Put upper nibble (upper 4-bits) on data lines, command mode
 165              		.loc 2 200 14 view .LVU31
 166 0008 8023     		movs	r3, #128
 167 000a DB01     		lsls	r3, r3, #7
 168 000c 0B43     		orrs	r3, r1
 169 000e 9361     		str	r3, [r2, #24]
 203:Core/Inc/lcd_stm32f0.c ****         {
 170              		.loc 2 203 9 is_stmt 1 view .LVU32
 203:Core/Inc/lcd_stm32f0.c ****         {
 171              		.loc 2 203 32 is_stmt 0 view .LVU33
 172 0010 43B2     		sxtb	r3, r0
 203:Core/Inc/lcd_stm32f0.c ****         {
 173              		.loc 2 203 12 view .LVU34
 174 0012 002B     		cmp	r3, #0
 175 0014 46DB     		blt	.L24
 209:Core/Inc/lcd_stm32f0.c ****         }
 176              		.loc 2 209 10 is_stmt 1 view .LVU35
 209:Core/Inc/lcd_stm32f0.c ****         }
 177              		.loc 2 209 15 is_stmt 0 view .LVU36
 178 0016 9022     		movs	r2, #144
 179 0018 D205     		lsls	r2, r2, #23
 180 001a 9169     		ldr	r1, [r2, #24]
 209:Core/Inc/lcd_stm32f0.c ****         }
 181              		.loc 2 209 22 view .LVU37
 182 001c 8023     		movs	r3, #128
 183 001e 1B06     		lsls	r3, r3, #24
 184 0020 0B43     		orrs	r3, r1
 185 0022 9361     		str	r3, [r2, #24]
 186              	.L9:
 212:Core/Inc/lcd_stm32f0.c **** 	{
 187              		.loc 2 212 9 is_stmt 1 view .LVU38
 212:Core/Inc/lcd_stm32f0.c **** 	{
 188              		.loc 2 212 12 is_stmt 0 view .LVU39
 189 0024 6306     		lsls	r3, r4, #25
 190 0026 45D5     		bpl	.L10
 214:Core/Inc/lcd_stm32f0.c ****         }
 191              		.loc 2 214 13 is_stmt 1 view .LVU40
 214:Core/Inc/lcd_stm32f0.c ****         }
 192              		.loc 2 214 18 is_stmt 0 view .LVU41
 193 0028 9022     		movs	r2, #144
 194 002a D205     		lsls	r2, r2, #23
 195 002c 9169     		ldr	r1, [r2, #24]
 214:Core/Inc/lcd_stm32f0.c ****         }
 196              		.loc 2 214 25 view .LVU42
 197 002e 8023     		movs	r3, #128
 198 0030 5B01     		lsls	r3, r3, #5
 199 0032 0B43     		orrs	r3, r1
 200 0034 9361     		str	r3, [r2, #24]
 201              	.L11:
 222:Core/Inc/lcd_stm32f0.c **** 
 202              		.loc 2 222 9 is_stmt 1 view .LVU43
 222:Core/Inc/lcd_stm32f0.c **** 
ARM GAS  C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s 			page 11


 203              		.loc 2 222 12 is_stmt 0 view .LVU44
 204 0036 A306     		lsls	r3, r4, #26
 205 0038 44D5     		bpl	.L12
 225:Core/Inc/lcd_stm32f0.c **** 	}
 206              		.loc 2 225 10 is_stmt 1 view .LVU45
 225:Core/Inc/lcd_stm32f0.c **** 	}
 207              		.loc 2 225 15 is_stmt 0 view .LVU46
 208 003a 394A     		ldr	r2, .L25+4
 209 003c 9169     		ldr	r1, [r2, #24]
 225:Core/Inc/lcd_stm32f0.c **** 	}
 210              		.loc 2 225 22 view .LVU47
 211 003e 8023     		movs	r3, #128
 212 0040 9B00     		lsls	r3, r3, #2
 213 0042 0B43     		orrs	r3, r1
 214 0044 9361     		str	r3, [r2, #24]
 215              	.L13:
 232:Core/Inc/lcd_stm32f0.c ****         {
 216              		.loc 2 232 9 is_stmt 1 view .LVU48
 232:Core/Inc/lcd_stm32f0.c ****         {
 217              		.loc 2 232 12 is_stmt 0 view .LVU49
 218 0046 E306     		lsls	r3, r4, #27
 219 0048 43D5     		bpl	.L14
 234:Core/Inc/lcd_stm32f0.c ****         }
 220              		.loc 2 234 10 is_stmt 1 view .LVU50
 234:Core/Inc/lcd_stm32f0.c ****         }
 221              		.loc 2 234 15 is_stmt 0 view .LVU51
 222 004a 354A     		ldr	r2, .L25+4
 223 004c 9169     		ldr	r1, [r2, #24]
 234:Core/Inc/lcd_stm32f0.c ****         }
 224              		.loc 2 234 22 view .LVU52
 225 004e 8023     		movs	r3, #128
 226 0050 5B00     		lsls	r3, r3, #1
 227 0052 0B43     		orrs	r3, r1
 228 0054 9361     		str	r3, [r2, #24]
 229              	.L15:
 241:Core/Inc/lcd_stm32f0.c **** 
 230              		.loc 2 241 9 is_stmt 1 view .LVU53
 231 0056 FFF7FEFF 		bl	pulse_strobe
 232              	.LVL6:
 244:Core/Inc/lcd_stm32f0.c ****         {
 233              		.loc 2 244 9 view .LVU54
 244:Core/Inc/lcd_stm32f0.c ****         {
 234              		.loc 2 244 12 is_stmt 0 view .LVU55
 235 005a 2307     		lsls	r3, r4, #28
 236 005c 40D5     		bpl	.L16
 246:Core/Inc/lcd_stm32f0.c ****         }
 237              		.loc 2 246 10 is_stmt 1 view .LVU56
 246:Core/Inc/lcd_stm32f0.c ****         }
 238              		.loc 2 246 15 is_stmt 0 view .LVU57
 239 005e 9022     		movs	r2, #144
 240 0060 D205     		lsls	r2, r2, #23
 241 0062 9169     		ldr	r1, [r2, #24]
 246:Core/Inc/lcd_stm32f0.c ****         }
 242              		.loc 2 246 22 view .LVU58
 243 0064 8023     		movs	r3, #128
 244 0066 1B02     		lsls	r3, r3, #8
 245 0068 0B43     		orrs	r3, r1
ARM GAS  C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s 			page 12


 246 006a 9361     		str	r3, [r2, #24]
 247              	.L17:
 253:Core/Inc/lcd_stm32f0.c **** 	{
 248              		.loc 2 253 9 is_stmt 1 view .LVU59
 253:Core/Inc/lcd_stm32f0.c **** 	{
 249              		.loc 2 253 12 is_stmt 0 view .LVU60
 250 006c 6307     		lsls	r3, r4, #29
 251 006e 3FD5     		bpl	.L18
 255:Core/Inc/lcd_stm32f0.c ****         }
 252              		.loc 2 255 13 is_stmt 1 view .LVU61
 255:Core/Inc/lcd_stm32f0.c ****         }
 253              		.loc 2 255 18 is_stmt 0 view .LVU62
 254 0070 9022     		movs	r2, #144
 255 0072 D205     		lsls	r2, r2, #23
 256 0074 9169     		ldr	r1, [r2, #24]
 255:Core/Inc/lcd_stm32f0.c ****         }
 257              		.loc 2 255 25 view .LVU63
 258 0076 8023     		movs	r3, #128
 259 0078 5B01     		lsls	r3, r3, #5
 260 007a 0B43     		orrs	r3, r1
 261 007c 9361     		str	r3, [r2, #24]
 262              	.L19:
 263:Core/Inc/lcd_stm32f0.c ****         {
 263              		.loc 2 263 9 is_stmt 1 view .LVU64
 263:Core/Inc/lcd_stm32f0.c ****         {
 264              		.loc 2 263 12 is_stmt 0 view .LVU65
 265 007e A307     		lsls	r3, r4, #30
 266 0080 3ED5     		bpl	.L20
 265:Core/Inc/lcd_stm32f0.c **** 	}
 267              		.loc 2 265 10 is_stmt 1 view .LVU66
 265:Core/Inc/lcd_stm32f0.c **** 	}
 268              		.loc 2 265 15 is_stmt 0 view .LVU67
 269 0082 274A     		ldr	r2, .L25+4
 270 0084 9169     		ldr	r1, [r2, #24]
 265:Core/Inc/lcd_stm32f0.c **** 	}
 271              		.loc 2 265 22 view .LVU68
 272 0086 8023     		movs	r3, #128
 273 0088 9B00     		lsls	r3, r3, #2
 274 008a 0B43     		orrs	r3, r1
 275 008c 9361     		str	r3, [r2, #24]
 276              	.L21:
 272:Core/Inc/lcd_stm32f0.c ****         {
 277              		.loc 2 272 9 is_stmt 1 view .LVU69
 272:Core/Inc/lcd_stm32f0.c ****         {
 278              		.loc 2 272 12 is_stmt 0 view .LVU70
 279 008e E407     		lsls	r4, r4, #31
 280 0090 3DD5     		bpl	.L22
 281              	.LVL7:
 274:Core/Inc/lcd_stm32f0.c ****         }
 282              		.loc 2 274 10 is_stmt 1 view .LVU71
 274:Core/Inc/lcd_stm32f0.c ****         }
 283              		.loc 2 274 15 is_stmt 0 view .LVU72
 284 0092 234A     		ldr	r2, .L25+4
 285 0094 9169     		ldr	r1, [r2, #24]
 274:Core/Inc/lcd_stm32f0.c ****         }
 286              		.loc 2 274 22 view .LVU73
 287 0096 8023     		movs	r3, #128
ARM GAS  C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s 			page 13


 288 0098 5B00     		lsls	r3, r3, #1
 289 009a 0B43     		orrs	r3, r1
 290 009c 9361     		str	r3, [r2, #24]
 291              	.L23:
 281:Core/Inc/lcd_stm32f0.c **** }
 292              		.loc 2 281 9 is_stmt 1 view .LVU74
 293 009e FFF7FEFF 		bl	pulse_strobe
 294              	.LVL8:
 282:Core/Inc/lcd_stm32f0.c **** 
 295              		.loc 2 282 1 is_stmt 0 view .LVU75
 296              		@ sp needed
 297 00a2 10BD     		pop	{r4, pc}
 298              	.LVL9:
 299              	.L24:
 205:Core/Inc/lcd_stm32f0.c ****         }
 300              		.loc 2 205 10 is_stmt 1 view .LVU76
 205:Core/Inc/lcd_stm32f0.c ****         }
 301              		.loc 2 205 15 is_stmt 0 view .LVU77
 302 00a4 9022     		movs	r2, #144
 303 00a6 D205     		lsls	r2, r2, #23
 304 00a8 9169     		ldr	r1, [r2, #24]
 205:Core/Inc/lcd_stm32f0.c ****         }
 305              		.loc 2 205 22 view .LVU78
 306 00aa 8023     		movs	r3, #128
 307 00ac 1B02     		lsls	r3, r3, #8
 308 00ae 0B43     		orrs	r3, r1
 309 00b0 9361     		str	r3, [r2, #24]
 310 00b2 B7E7     		b	.L9
 311              	.L10:
 219:Core/Inc/lcd_stm32f0.c ****         }
 312              		.loc 2 219 13 is_stmt 1 view .LVU79
 219:Core/Inc/lcd_stm32f0.c ****         }
 313              		.loc 2 219 18 is_stmt 0 view .LVU80
 314 00b4 9022     		movs	r2, #144
 315 00b6 D205     		lsls	r2, r2, #23
 316 00b8 9169     		ldr	r1, [r2, #24]
 219:Core/Inc/lcd_stm32f0.c ****         }
 317              		.loc 2 219 25 view .LVU81
 318 00ba 8023     		movs	r3, #128
 319 00bc 5B05     		lsls	r3, r3, #21
 320 00be 0B43     		orrs	r3, r1
 321 00c0 9361     		str	r3, [r2, #24]
 322 00c2 B8E7     		b	.L11
 323              	.L12:
 229:Core/Inc/lcd_stm32f0.c ****         }
 324              		.loc 2 229 10 is_stmt 1 view .LVU82
 229:Core/Inc/lcd_stm32f0.c ****         }
 325              		.loc 2 229 15 is_stmt 0 view .LVU83
 326 00c4 164A     		ldr	r2, .L25+4
 327 00c6 9169     		ldr	r1, [r2, #24]
 229:Core/Inc/lcd_stm32f0.c ****         }
 328              		.loc 2 229 22 view .LVU84
 329 00c8 8023     		movs	r3, #128
 330 00ca 9B04     		lsls	r3, r3, #18
 331 00cc 0B43     		orrs	r3, r1
 332 00ce 9361     		str	r3, [r2, #24]
 333 00d0 B9E7     		b	.L13
ARM GAS  C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s 			page 14


 334              	.L14:
 238:Core/Inc/lcd_stm32f0.c ****         }
 335              		.loc 2 238 10 is_stmt 1 view .LVU85
 238:Core/Inc/lcd_stm32f0.c ****         }
 336              		.loc 2 238 15 is_stmt 0 view .LVU86
 337 00d2 134A     		ldr	r2, .L25+4
 338 00d4 9169     		ldr	r1, [r2, #24]
 238:Core/Inc/lcd_stm32f0.c ****         }
 339              		.loc 2 238 22 view .LVU87
 340 00d6 8023     		movs	r3, #128
 341 00d8 5B04     		lsls	r3, r3, #17
 342 00da 0B43     		orrs	r3, r1
 343 00dc 9361     		str	r3, [r2, #24]
 344 00de BAE7     		b	.L15
 345              	.LVL10:
 346              	.L16:
 250:Core/Inc/lcd_stm32f0.c ****         }
 347              		.loc 2 250 10 is_stmt 1 view .LVU88
 250:Core/Inc/lcd_stm32f0.c ****         }
 348              		.loc 2 250 15 is_stmt 0 view .LVU89
 349 00e0 9022     		movs	r2, #144
 350 00e2 D205     		lsls	r2, r2, #23
 351 00e4 9169     		ldr	r1, [r2, #24]
 250:Core/Inc/lcd_stm32f0.c ****         }
 352              		.loc 2 250 22 view .LVU90
 353 00e6 8023     		movs	r3, #128
 354 00e8 1B06     		lsls	r3, r3, #24
 355 00ea 0B43     		orrs	r3, r1
 356 00ec 9361     		str	r3, [r2, #24]
 357 00ee BDE7     		b	.L17
 358              	.L18:
 260:Core/Inc/lcd_stm32f0.c ****         }
 359              		.loc 2 260 13 is_stmt 1 view .LVU91
 260:Core/Inc/lcd_stm32f0.c ****         }
 360              		.loc 2 260 18 is_stmt 0 view .LVU92
 361 00f0 9022     		movs	r2, #144
 362 00f2 D205     		lsls	r2, r2, #23
 363 00f4 9169     		ldr	r1, [r2, #24]
 260:Core/Inc/lcd_stm32f0.c ****         }
 364              		.loc 2 260 25 view .LVU93
 365 00f6 8023     		movs	r3, #128
 366 00f8 5B05     		lsls	r3, r3, #21
 367 00fa 0B43     		orrs	r3, r1
 368 00fc 9361     		str	r3, [r2, #24]
 369 00fe BEE7     		b	.L19
 370              	.L20:
 269:Core/Inc/lcd_stm32f0.c ****         }
 371              		.loc 2 269 10 is_stmt 1 view .LVU94
 269:Core/Inc/lcd_stm32f0.c ****         }
 372              		.loc 2 269 15 is_stmt 0 view .LVU95
 373 0100 074A     		ldr	r2, .L25+4
 374 0102 9169     		ldr	r1, [r2, #24]
 269:Core/Inc/lcd_stm32f0.c ****         }
 375              		.loc 2 269 22 view .LVU96
 376 0104 8023     		movs	r3, #128
 377 0106 9B04     		lsls	r3, r3, #18
 378 0108 0B43     		orrs	r3, r1
ARM GAS  C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s 			page 15


 379 010a 9361     		str	r3, [r2, #24]
 380 010c BFE7     		b	.L21
 381              	.LVL11:
 382              	.L22:
 278:Core/Inc/lcd_stm32f0.c ****         }
 383              		.loc 2 278 10 is_stmt 1 view .LVU97
 278:Core/Inc/lcd_stm32f0.c ****         }
 384              		.loc 2 278 15 is_stmt 0 view .LVU98
 385 010e 044A     		ldr	r2, .L25+4
 386 0110 9169     		ldr	r1, [r2, #24]
 278:Core/Inc/lcd_stm32f0.c ****         }
 387              		.loc 2 278 22 view .LVU99
 388 0112 8023     		movs	r3, #128
 389 0114 5B04     		lsls	r3, r3, #17
 390 0116 0B43     		orrs	r3, r1
 391 0118 9361     		str	r3, [r2, #24]
 392 011a C0E7     		b	.L23
 393              	.L26:
 394              		.align	2
 395              	.L25:
 396 011c 00080048 		.word	1207961600
 397 0120 00040048 		.word	1207960576
 398              		.cfi_endproc
 399              	.LFE42:
 401              		.section	.text.lcd_putstring,"ax",%progbits
 402              		.align	1
 403              		.global	lcd_putstring
 404              		.syntax unified
 405              		.code	16
 406              		.thumb_func
 408              	lcd_putstring:
 409              	.LVL12:
 410              	.LFB43:
 291:Core/Inc/lcd_stm32f0.c ****     unsigned char count = 0;
 411              		.loc 2 291 1 is_stmt 1 view -0
 412              		.cfi_startproc
 413              		@ args = 0, pretend = 0, frame = 0
 414              		@ frame_needed = 0, uses_anonymous_args = 0
 291:Core/Inc/lcd_stm32f0.c ****     unsigned char count = 0;
 415              		.loc 2 291 1 is_stmt 0 view .LVU101
 416 0000 70B5     		push	{r4, r5, r6, lr}
 417              		.cfi_def_cfa_offset 16
 418              		.cfi_offset 4, -16
 419              		.cfi_offset 5, -12
 420              		.cfi_offset 6, -8
 421              		.cfi_offset 14, -4
 422 0002 0500     		movs	r5, r0
 292:Core/Inc/lcd_stm32f0.c **** 
 423              		.loc 2 292 5 is_stmt 1 view .LVU102
 424              	.LVL13:
 294:Core/Inc/lcd_stm32f0.c ****     {
 425              		.loc 2 294 5 view .LVU103
 292:Core/Inc/lcd_stm32f0.c **** 
 426              		.loc 2 292 19 is_stmt 0 view .LVU104
 427 0004 0024     		movs	r4, #0
 294:Core/Inc/lcd_stm32f0.c ****     {
 428              		.loc 2 294 11 view .LVU105
ARM GAS  C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s 			page 16


 429 0006 03E0     		b	.L28
 430              	.LVL14:
 431              	.L29:
 296:Core/Inc/lcd_stm32f0.c **** 	    count++;
 432              		.loc 2 296 6 is_stmt 1 view .LVU106
 433 0008 FFF7FEFF 		bl	lcd_putchar
 434              	.LVL15:
 297:Core/Inc/lcd_stm32f0.c **** 	 }
 435              		.loc 2 297 6 view .LVU107
 297:Core/Inc/lcd_stm32f0.c **** 	 }
 436              		.loc 2 297 11 is_stmt 0 view .LVU108
 437 000c 0134     		adds	r4, r4, #1
 438              	.LVL16:
 297:Core/Inc/lcd_stm32f0.c **** 	 }
 439              		.loc 2 297 11 view .LVU109
 440 000e E4B2     		uxtb	r4, r4
 441              	.LVL17:
 442              	.L28:
 294:Core/Inc/lcd_stm32f0.c ****     {
 443              		.loc 2 294 12 is_stmt 1 view .LVU110
 294:Core/Inc/lcd_stm32f0.c ****     {
 444              		.loc 2 294 20 is_stmt 0 view .LVU111
 445 0010 285D     		ldrb	r0, [r5, r4]
 294:Core/Inc/lcd_stm32f0.c ****     {
 446              		.loc 2 294 12 view .LVU112
 447 0012 0028     		cmp	r0, #0
 448 0014 F8D1     		bne	.L29
 299:Core/Inc/lcd_stm32f0.c **** 
 449              		.loc 2 299 1 view .LVU113
 450              		@ sp needed
 451              	.LVL18:
 452              	.LVL19:
 299:Core/Inc/lcd_stm32f0.c **** 
 453              		.loc 2 299 1 view .LVU114
 454 0016 70BD     		pop	{r4, r5, r6, pc}
 455              		.cfi_endproc
 456              	.LFE43:
 458              		.section	.text.lcd_command,"ax",%progbits
 459              		.align	1
 460              		.global	lcd_command
 461              		.syntax unified
 462              		.code	16
 463              		.thumb_func
 465              	lcd_command:
 466              	.LVL20:
 467              	.LFB40:
  72:Core/Inc/lcd_stm32f0.c ****     GPIOC->BSRR |= LCD_RS_RESET;	// Register Select (RS)line low (data sent will now be read as com
 468              		.loc 2 72 1 is_stmt 1 view -0
 469              		.cfi_startproc
 470              		@ args = 0, pretend = 0, frame = 0
 471              		@ frame_needed = 0, uses_anonymous_args = 0
  72:Core/Inc/lcd_stm32f0.c ****     GPIOC->BSRR |= LCD_RS_RESET;	// Register Select (RS)line low (data sent will now be read as com
 472              		.loc 2 72 1 is_stmt 0 view .LVU116
 473 0000 10B5     		push	{r4, lr}
 474              		.cfi_def_cfa_offset 8
 475              		.cfi_offset 4, -8
 476              		.cfi_offset 14, -4
ARM GAS  C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s 			page 17


 477 0002 0400     		movs	r4, r0
  73:Core/Inc/lcd_stm32f0.c **** 
 478              		.loc 2 73 5 is_stmt 1 view .LVU117
  73:Core/Inc/lcd_stm32f0.c **** 
 479              		.loc 2 73 10 is_stmt 0 view .LVU118
 480 0004 474A     		ldr	r2, .L48
 481 0006 9169     		ldr	r1, [r2, #24]
  73:Core/Inc/lcd_stm32f0.c **** 
 482              		.loc 2 73 17 view .LVU119
 483 0008 8023     		movs	r3, #128
 484 000a DB05     		lsls	r3, r3, #23
 485 000c 0B43     		orrs	r3, r1
 486 000e 9361     		str	r3, [r2, #24]
  77:Core/Inc/lcd_stm32f0.c ****     {
 487              		.loc 2 77 5 is_stmt 1 view .LVU120
  77:Core/Inc/lcd_stm32f0.c ****     {
 488              		.loc 2 77 26 is_stmt 0 view .LVU121
 489 0010 43B2     		sxtb	r3, r0
  77:Core/Inc/lcd_stm32f0.c ****     {
 490              		.loc 2 77 8 view .LVU122
 491 0012 002B     		cmp	r3, #0
 492 0014 49DB     		blt	.L47
  83:Core/Inc/lcd_stm32f0.c ****     }
 493              		.loc 2 83 6 is_stmt 1 view .LVU123
  83:Core/Inc/lcd_stm32f0.c ****     }
 494              		.loc 2 83 11 is_stmt 0 view .LVU124
 495 0016 9022     		movs	r2, #144
 496 0018 D205     		lsls	r2, r2, #23
 497 001a 9169     		ldr	r1, [r2, #24]
  83:Core/Inc/lcd_stm32f0.c ****     }
 498              		.loc 2 83 18 view .LVU125
 499 001c 8023     		movs	r3, #128
 500 001e 1B06     		lsls	r3, r3, #24
 501 0020 0B43     		orrs	r3, r1
 502 0022 9361     		str	r3, [r2, #24]
 503              	.L32:
  86:Core/Inc/lcd_stm32f0.c ****     {
 504              		.loc 2 86 5 is_stmt 1 view .LVU126
  86:Core/Inc/lcd_stm32f0.c ****     {
 505              		.loc 2 86 8 is_stmt 0 view .LVU127
 506 0024 6306     		lsls	r3, r4, #25
 507 0026 48D5     		bpl	.L33
  88:Core/Inc/lcd_stm32f0.c ****     }
 508              		.loc 2 88 9 is_stmt 1 view .LVU128
  88:Core/Inc/lcd_stm32f0.c ****     }
 509              		.loc 2 88 14 is_stmt 0 view .LVU129
 510 0028 9022     		movs	r2, #144
 511 002a D205     		lsls	r2, r2, #23
 512 002c 9169     		ldr	r1, [r2, #24]
  88:Core/Inc/lcd_stm32f0.c ****     }
 513              		.loc 2 88 21 view .LVU130
 514 002e 8023     		movs	r3, #128
 515 0030 5B01     		lsls	r3, r3, #5
 516 0032 0B43     		orrs	r3, r1
 517 0034 9361     		str	r3, [r2, #24]
 518              	.L34:
  95:Core/Inc/lcd_stm32f0.c ****     {
ARM GAS  C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s 			page 18


 519              		.loc 2 95 5 is_stmt 1 view .LVU131
  95:Core/Inc/lcd_stm32f0.c ****     {
 520              		.loc 2 95 8 is_stmt 0 view .LVU132
 521 0036 A306     		lsls	r3, r4, #26
 522 0038 47D5     		bpl	.L35
  97:Core/Inc/lcd_stm32f0.c ****     }
 523              		.loc 2 97 6 is_stmt 1 view .LVU133
  97:Core/Inc/lcd_stm32f0.c ****     }
 524              		.loc 2 97 11 is_stmt 0 view .LVU134
 525 003a 3B4A     		ldr	r2, .L48+4
 526 003c 9169     		ldr	r1, [r2, #24]
  97:Core/Inc/lcd_stm32f0.c ****     }
 527              		.loc 2 97 18 view .LVU135
 528 003e 8023     		movs	r3, #128
 529 0040 9B00     		lsls	r3, r3, #2
 530 0042 0B43     		orrs	r3, r1
 531 0044 9361     		str	r3, [r2, #24]
 532              	.L36:
 104:Core/Inc/lcd_stm32f0.c ****     {
 533              		.loc 2 104 5 is_stmt 1 view .LVU136
 104:Core/Inc/lcd_stm32f0.c ****     {
 534              		.loc 2 104 8 is_stmt 0 view .LVU137
 535 0046 E306     		lsls	r3, r4, #27
 536 0048 46D5     		bpl	.L37
 106:Core/Inc/lcd_stm32f0.c ****     }
 537              		.loc 2 106 6 is_stmt 1 view .LVU138
 106:Core/Inc/lcd_stm32f0.c ****     }
 538              		.loc 2 106 11 is_stmt 0 view .LVU139
 539 004a 374A     		ldr	r2, .L48+4
 540 004c 9169     		ldr	r1, [r2, #24]
 106:Core/Inc/lcd_stm32f0.c ****     }
 541              		.loc 2 106 18 view .LVU140
 542 004e 8023     		movs	r3, #128
 543 0050 5B00     		lsls	r3, r3, #1
 544 0052 0B43     		orrs	r3, r1
 545 0054 9361     		str	r3, [r2, #24]
 546              	.L38:
 113:Core/Inc/lcd_stm32f0.c **** 
 547              		.loc 2 113 5 is_stmt 1 view .LVU141
 548 0056 FFF7FEFF 		bl	pulse_strobe
 549              	.LVL21:
 116:Core/Inc/lcd_stm32f0.c ****     {
 550              		.loc 2 116 5 view .LVU142
 116:Core/Inc/lcd_stm32f0.c ****     {
 551              		.loc 2 116 8 is_stmt 0 view .LVU143
 552 005a 2307     		lsls	r3, r4, #28
 553 005c 43D5     		bpl	.L39
 118:Core/Inc/lcd_stm32f0.c ****     }
 554              		.loc 2 118 6 is_stmt 1 view .LVU144
 118:Core/Inc/lcd_stm32f0.c ****     }
 555              		.loc 2 118 11 is_stmt 0 view .LVU145
 556 005e 9022     		movs	r2, #144
 557 0060 D205     		lsls	r2, r2, #23
 558 0062 9169     		ldr	r1, [r2, #24]
 118:Core/Inc/lcd_stm32f0.c ****     }
 559              		.loc 2 118 18 view .LVU146
 560 0064 8023     		movs	r3, #128
ARM GAS  C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s 			page 19


 561 0066 1B02     		lsls	r3, r3, #8
 562 0068 0B43     		orrs	r3, r1
 563 006a 9361     		str	r3, [r2, #24]
 564              	.L40:
 125:Core/Inc/lcd_stm32f0.c ****     {
 565              		.loc 2 125 5 is_stmt 1 view .LVU147
 125:Core/Inc/lcd_stm32f0.c ****     {
 566              		.loc 2 125 8 is_stmt 0 view .LVU148
 567 006c 6307     		lsls	r3, r4, #29
 568 006e 42D5     		bpl	.L41
 127:Core/Inc/lcd_stm32f0.c ****     }
 569              		.loc 2 127 9 is_stmt 1 view .LVU149
 127:Core/Inc/lcd_stm32f0.c ****     }
 570              		.loc 2 127 14 is_stmt 0 view .LVU150
 571 0070 9022     		movs	r2, #144
 572 0072 D205     		lsls	r2, r2, #23
 573 0074 9169     		ldr	r1, [r2, #24]
 127:Core/Inc/lcd_stm32f0.c ****     }
 574              		.loc 2 127 21 view .LVU151
 575 0076 8023     		movs	r3, #128
 576 0078 5B01     		lsls	r3, r3, #5
 577 007a 0B43     		orrs	r3, r1
 578 007c 9361     		str	r3, [r2, #24]
 579              	.L42:
 134:Core/Inc/lcd_stm32f0.c ****     {
 580              		.loc 2 134 5 is_stmt 1 view .LVU152
 134:Core/Inc/lcd_stm32f0.c ****     {
 581              		.loc 2 134 8 is_stmt 0 view .LVU153
 582 007e A307     		lsls	r3, r4, #30
 583 0080 41D5     		bpl	.L43
 136:Core/Inc/lcd_stm32f0.c ****     }
 584              		.loc 2 136 6 is_stmt 1 view .LVU154
 136:Core/Inc/lcd_stm32f0.c ****     }
 585              		.loc 2 136 11 is_stmt 0 view .LVU155
 586 0082 294A     		ldr	r2, .L48+4
 587 0084 9169     		ldr	r1, [r2, #24]
 136:Core/Inc/lcd_stm32f0.c ****     }
 588              		.loc 2 136 18 view .LVU156
 589 0086 8023     		movs	r3, #128
 590 0088 9B00     		lsls	r3, r3, #2
 591 008a 0B43     		orrs	r3, r1
 592 008c 9361     		str	r3, [r2, #24]
 593              	.L44:
 143:Core/Inc/lcd_stm32f0.c ****     {
 594              		.loc 2 143 5 is_stmt 1 view .LVU157
 143:Core/Inc/lcd_stm32f0.c ****     {
 595              		.loc 2 143 8 is_stmt 0 view .LVU158
 596 008e E407     		lsls	r4, r4, #31
 597 0090 40D5     		bpl	.L45
 598              	.LVL22:
 145:Core/Inc/lcd_stm32f0.c ****     }
 599              		.loc 2 145 6 is_stmt 1 view .LVU159
 145:Core/Inc/lcd_stm32f0.c ****     }
 600              		.loc 2 145 11 is_stmt 0 view .LVU160
 601 0092 254A     		ldr	r2, .L48+4
 602 0094 9169     		ldr	r1, [r2, #24]
 145:Core/Inc/lcd_stm32f0.c ****     }
ARM GAS  C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s 			page 20


 603              		.loc 2 145 18 view .LVU161
 604 0096 8023     		movs	r3, #128
 605 0098 5B00     		lsls	r3, r3, #1
 606 009a 0B43     		orrs	r3, r1
 607 009c 9361     		str	r3, [r2, #24]
 608              	.L46:
 152:Core/Inc/lcd_stm32f0.c ****     delay(3000);
 609              		.loc 2 152 5 is_stmt 1 view .LVU162
 610 009e FFF7FEFF 		bl	pulse_strobe
 611              	.LVL23:
 153:Core/Inc/lcd_stm32f0.c **** }
 612              		.loc 2 153 5 view .LVU163
 613 00a2 2248     		ldr	r0, .L48+8
 614 00a4 FFF7FEFF 		bl	delay
 615              	.LVL24:
 154:Core/Inc/lcd_stm32f0.c **** 
 616              		.loc 2 154 1 is_stmt 0 view .LVU164
 617              		@ sp needed
 618 00a8 10BD     		pop	{r4, pc}
 619              	.LVL25:
 620              	.L47:
  79:Core/Inc/lcd_stm32f0.c ****     }
 621              		.loc 2 79 6 is_stmt 1 view .LVU165
  79:Core/Inc/lcd_stm32f0.c ****     }
 622              		.loc 2 79 11 is_stmt 0 view .LVU166
 623 00aa 9022     		movs	r2, #144
 624 00ac D205     		lsls	r2, r2, #23
 625 00ae 9169     		ldr	r1, [r2, #24]
  79:Core/Inc/lcd_stm32f0.c ****     }
 626              		.loc 2 79 18 view .LVU167
 627 00b0 8023     		movs	r3, #128
 628 00b2 1B02     		lsls	r3, r3, #8
 629 00b4 0B43     		orrs	r3, r1
 630 00b6 9361     		str	r3, [r2, #24]
 631 00b8 B4E7     		b	.L32
 632              	.L33:
  92:Core/Inc/lcd_stm32f0.c ****     }
 633              		.loc 2 92 9 is_stmt 1 view .LVU168
  92:Core/Inc/lcd_stm32f0.c ****     }
 634              		.loc 2 92 14 is_stmt 0 view .LVU169
 635 00ba 9022     		movs	r2, #144
 636 00bc D205     		lsls	r2, r2, #23
 637 00be 9169     		ldr	r1, [r2, #24]
  92:Core/Inc/lcd_stm32f0.c ****     }
 638              		.loc 2 92 21 view .LVU170
 639 00c0 8023     		movs	r3, #128
 640 00c2 5B05     		lsls	r3, r3, #21
 641 00c4 0B43     		orrs	r3, r1
 642 00c6 9361     		str	r3, [r2, #24]
 643 00c8 B5E7     		b	.L34
 644              	.L35:
 101:Core/Inc/lcd_stm32f0.c ****     }
 645              		.loc 2 101 6 is_stmt 1 view .LVU171
 101:Core/Inc/lcd_stm32f0.c ****     }
 646              		.loc 2 101 11 is_stmt 0 view .LVU172
 647 00ca 174A     		ldr	r2, .L48+4
 648 00cc 9169     		ldr	r1, [r2, #24]
ARM GAS  C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s 			page 21


 101:Core/Inc/lcd_stm32f0.c ****     }
 649              		.loc 2 101 18 view .LVU173
 650 00ce 8023     		movs	r3, #128
 651 00d0 9B04     		lsls	r3, r3, #18
 652 00d2 0B43     		orrs	r3, r1
 653 00d4 9361     		str	r3, [r2, #24]
 654 00d6 B6E7     		b	.L36
 655              	.L37:
 110:Core/Inc/lcd_stm32f0.c ****     }
 656              		.loc 2 110 6 is_stmt 1 view .LVU174
 110:Core/Inc/lcd_stm32f0.c ****     }
 657              		.loc 2 110 11 is_stmt 0 view .LVU175
 658 00d8 134A     		ldr	r2, .L48+4
 659 00da 9169     		ldr	r1, [r2, #24]
 110:Core/Inc/lcd_stm32f0.c ****     }
 660              		.loc 2 110 18 view .LVU176
 661 00dc 8023     		movs	r3, #128
 662 00de 5B04     		lsls	r3, r3, #17
 663 00e0 0B43     		orrs	r3, r1
 664 00e2 9361     		str	r3, [r2, #24]
 665 00e4 B7E7     		b	.L38
 666              	.LVL26:
 667              	.L39:
 122:Core/Inc/lcd_stm32f0.c ****     }
 668              		.loc 2 122 6 is_stmt 1 view .LVU177
 122:Core/Inc/lcd_stm32f0.c ****     }
 669              		.loc 2 122 11 is_stmt 0 view .LVU178
 670 00e6 9022     		movs	r2, #144
 671 00e8 D205     		lsls	r2, r2, #23
 672 00ea 9169     		ldr	r1, [r2, #24]
 122:Core/Inc/lcd_stm32f0.c ****     }
 673              		.loc 2 122 18 view .LVU179
 674 00ec 8023     		movs	r3, #128
 675 00ee 1B06     		lsls	r3, r3, #24
 676 00f0 0B43     		orrs	r3, r1
 677 00f2 9361     		str	r3, [r2, #24]
 678 00f4 BAE7     		b	.L40
 679              	.L41:
 131:Core/Inc/lcd_stm32f0.c ****     }
 680              		.loc 2 131 9 is_stmt 1 view .LVU180
 131:Core/Inc/lcd_stm32f0.c ****     }
 681              		.loc 2 131 14 is_stmt 0 view .LVU181
 682 00f6 9022     		movs	r2, #144
 683 00f8 D205     		lsls	r2, r2, #23
 684 00fa 9169     		ldr	r1, [r2, #24]
 131:Core/Inc/lcd_stm32f0.c ****     }
 685              		.loc 2 131 21 view .LVU182
 686 00fc 8023     		movs	r3, #128
 687 00fe 5B05     		lsls	r3, r3, #21
 688 0100 0B43     		orrs	r3, r1
 689 0102 9361     		str	r3, [r2, #24]
 690 0104 BBE7     		b	.L42
 691              	.L43:
 140:Core/Inc/lcd_stm32f0.c ****     }
 692              		.loc 2 140 6 is_stmt 1 view .LVU183
 140:Core/Inc/lcd_stm32f0.c ****     }
 693              		.loc 2 140 11 is_stmt 0 view .LVU184
ARM GAS  C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s 			page 22


 694 0106 084A     		ldr	r2, .L48+4
 695 0108 9169     		ldr	r1, [r2, #24]
 140:Core/Inc/lcd_stm32f0.c ****     }
 696              		.loc 2 140 18 view .LVU185
 697 010a 8023     		movs	r3, #128
 698 010c 9B04     		lsls	r3, r3, #18
 699 010e 0B43     		orrs	r3, r1
 700 0110 9361     		str	r3, [r2, #24]
 701 0112 BCE7     		b	.L44
 702              	.LVL27:
 703              	.L45:
 149:Core/Inc/lcd_stm32f0.c ****     }
 704              		.loc 2 149 6 is_stmt 1 view .LVU186
 149:Core/Inc/lcd_stm32f0.c ****     }
 705              		.loc 2 149 11 is_stmt 0 view .LVU187
 706 0114 044A     		ldr	r2, .L48+4
 707 0116 9169     		ldr	r1, [r2, #24]
 149:Core/Inc/lcd_stm32f0.c ****     }
 708              		.loc 2 149 18 view .LVU188
 709 0118 8023     		movs	r3, #128
 710 011a 5B04     		lsls	r3, r3, #17
 711 011c 0B43     		orrs	r3, r1
 712 011e 9361     		str	r3, [r2, #24]
 713 0120 BDE7     		b	.L46
 714              	.L49:
 715 0122 C046     		.align	2
 716              	.L48:
 717 0124 00080048 		.word	1207961600
 718 0128 00040048 		.word	1207960576
 719 012c B80B0000 		.word	3000
 720              		.cfi_endproc
 721              	.LFE40:
 723              		.section	.text.init_LCD,"ax",%progbits
 724              		.align	1
 725              		.global	init_LCD
 726              		.syntax unified
 727              		.code	16
 728              		.thumb_func
 730              	init_LCD:
 731              	.LFB41:
 168:Core/Inc/lcd_stm32f0.c ****     RCC->AHBENR |= RCC_AHBENR_GPIOAEN;	// Connect clocks to GPIO A, B and C
 732              		.loc 2 168 1 is_stmt 1 view -0
 733              		.cfi_startproc
 734              		@ args = 0, pretend = 0, frame = 0
 735              		@ frame_needed = 0, uses_anonymous_args = 0
 736 0000 10B5     		push	{r4, lr}
 737              		.cfi_def_cfa_offset 8
 738              		.cfi_offset 4, -8
 739              		.cfi_offset 14, -4
 169:Core/Inc/lcd_stm32f0.c ****     RCC->AHBENR |= RCC_AHBENR_GPIOBEN;
 740              		.loc 2 169 5 view .LVU190
 169:Core/Inc/lcd_stm32f0.c ****     RCC->AHBENR |= RCC_AHBENR_GPIOBEN;
 741              		.loc 2 169 8 is_stmt 0 view .LVU191
 742 0002 1B4B     		ldr	r3, .L51
 743 0004 5969     		ldr	r1, [r3, #20]
 169:Core/Inc/lcd_stm32f0.c ****     RCC->AHBENR |= RCC_AHBENR_GPIOBEN;
 744              		.loc 2 169 17 view .LVU192
ARM GAS  C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s 			page 23


 745 0006 8022     		movs	r2, #128
 746 0008 9202     		lsls	r2, r2, #10
 747 000a 0A43     		orrs	r2, r1
 748 000c 5A61     		str	r2, [r3, #20]
 170:Core/Inc/lcd_stm32f0.c ****     RCC->AHBENR |= RCC_AHBENR_GPIOCEN;
 749              		.loc 2 170 5 is_stmt 1 view .LVU193
 170:Core/Inc/lcd_stm32f0.c ****     RCC->AHBENR |= RCC_AHBENR_GPIOCEN;
 750              		.loc 2 170 8 is_stmt 0 view .LVU194
 751 000e 5969     		ldr	r1, [r3, #20]
 170:Core/Inc/lcd_stm32f0.c ****     RCC->AHBENR |= RCC_AHBENR_GPIOCEN;
 752              		.loc 2 170 17 view .LVU195
 753 0010 8022     		movs	r2, #128
 754 0012 D202     		lsls	r2, r2, #11
 755 0014 0A43     		orrs	r2, r1
 756 0016 5A61     		str	r2, [r3, #20]
 171:Core/Inc/lcd_stm32f0.c **** 
 757              		.loc 2 171 5 is_stmt 1 view .LVU196
 171:Core/Inc/lcd_stm32f0.c **** 
 758              		.loc 2 171 8 is_stmt 0 view .LVU197
 759 0018 5969     		ldr	r1, [r3, #20]
 171:Core/Inc/lcd_stm32f0.c **** 
 760              		.loc 2 171 17 view .LVU198
 761 001a 8022     		movs	r2, #128
 762 001c 1203     		lsls	r2, r2, #12
 763 001e 0A43     		orrs	r2, r1
 764 0020 5A61     		str	r2, [r3, #20]
 173:Core/Inc/lcd_stm32f0.c ****     GPIOB->MODER |= (GPIO_MODER_MODER8_0|GPIO_MODER_MODER9_0);   // D4 and D5
 765              		.loc 2 173 5 is_stmt 1 view .LVU199
 173:Core/Inc/lcd_stm32f0.c ****     GPIOB->MODER |= (GPIO_MODER_MODER8_0|GPIO_MODER_MODER9_0);   // D4 and D5
 766              		.loc 2 173 10 is_stmt 0 view .LVU200
 767 0022 9022     		movs	r2, #144
 768 0024 D205     		lsls	r2, r2, #23
 769 0026 1168     		ldr	r1, [r2]
 173:Core/Inc/lcd_stm32f0.c ****     GPIOB->MODER |= (GPIO_MODER_MODER8_0|GPIO_MODER_MODER9_0);   // D4 and D5
 770              		.loc 2 173 18 view .LVU201
 771 0028 8223     		movs	r3, #130
 772 002a DB05     		lsls	r3, r3, #23
 773 002c 0B43     		orrs	r3, r1
 774 002e 1360     		str	r3, [r2]
 174:Core/Inc/lcd_stm32f0.c ****     GPIOC->MODER |= (GPIO_MODER_MODER14_0|GPIO_MODER_MODER15_0); // RS and EN
 775              		.loc 2 174 5 is_stmt 1 view .LVU202
 174:Core/Inc/lcd_stm32f0.c ****     GPIOC->MODER |= (GPIO_MODER_MODER14_0|GPIO_MODER_MODER15_0); // RS and EN
 776              		.loc 2 174 10 is_stmt 0 view .LVU203
 777 0030 104A     		ldr	r2, .L51+4
 778 0032 1168     		ldr	r1, [r2]
 174:Core/Inc/lcd_stm32f0.c ****     GPIOC->MODER |= (GPIO_MODER_MODER14_0|GPIO_MODER_MODER15_0); // RS and EN
 779              		.loc 2 174 18 view .LVU204
 780 0034 A023     		movs	r3, #160
 781 0036 DB02     		lsls	r3, r3, #11
 782 0038 0B43     		orrs	r3, r1
 783 003a 1360     		str	r3, [r2]
 175:Core/Inc/lcd_stm32f0.c **** 
 784              		.loc 2 175 5 is_stmt 1 view .LVU205
 175:Core/Inc/lcd_stm32f0.c **** 
 785              		.loc 2 175 10 is_stmt 0 view .LVU206
 786 003c 0E4A     		ldr	r2, .L51+8
 787 003e 1168     		ldr	r1, [r2]
ARM GAS  C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s 			page 24


 175:Core/Inc/lcd_stm32f0.c **** 
 788              		.loc 2 175 18 view .LVU207
 789 0040 A023     		movs	r3, #160
 790 0042 DB05     		lsls	r3, r3, #23
 791 0044 0B43     		orrs	r3, r1
 792 0046 1360     		str	r3, [r2]
 177:Core/Inc/lcd_stm32f0.c **** 
 793              		.loc 2 177 5 is_stmt 1 view .LVU208
 794 0048 0C48     		ldr	r0, .L51+12
 795 004a FFF7FEFF 		bl	delay
 796              	.LVL28:
 179:Core/Inc/lcd_stm32f0.c ****     lcd_command(FOURBIT_MODE);		// Set LCD into 4 bit mode
 797              		.loc 2 179 5 view .LVU209
 798 004e 3320     		movs	r0, #51
 799 0050 FFF7FEFF 		bl	lcd_command
 800              	.LVL29:
 180:Core/Inc/lcd_stm32f0.c ****     lcd_command(DISPLAY_ON);		// Turn display on and set up cursor
 801              		.loc 2 180 5 view .LVU210
 802 0054 3220     		movs	r0, #50
 803 0056 FFF7FEFF 		bl	lcd_command
 804              	.LVL30:
 181:Core/Inc/lcd_stm32f0.c ****     lcd_command(TWOLINE_MODE);		// Set up 2 lines and character size
 805              		.loc 2 181 5 view .LVU211
 806 005a 0C20     		movs	r0, #12
 807 005c FFF7FEFF 		bl	lcd_command
 808              	.LVL31:
 182:Core/Inc/lcd_stm32f0.c ****     lcd_command(CLEAR);			// Clear display
 809              		.loc 2 182 5 view .LVU212
 810 0060 2820     		movs	r0, #40
 811 0062 FFF7FEFF 		bl	lcd_command
 812              	.LVL32:
 183:Core/Inc/lcd_stm32f0.c **** }
 813              		.loc 2 183 5 view .LVU213
 814 0066 0120     		movs	r0, #1
 815 0068 FFF7FEFF 		bl	lcd_command
 816              	.LVL33:
 184:Core/Inc/lcd_stm32f0.c **** 
 817              		.loc 2 184 1 is_stmt 0 view .LVU214
 818              		@ sp needed
 819 006c 10BD     		pop	{r4, pc}
 820              	.L52:
 821 006e C046     		.align	2
 822              	.L51:
 823 0070 00100240 		.word	1073876992
 824 0074 00040048 		.word	1207960576
 825 0078 00080048 		.word	1207961600
 826 007c 30750000 		.word	30000
 827              		.cfi_endproc
 828              	.LFE41:
 830              		.section	.text.initGPIO,"ax",%progbits
 831              		.align	1
 832              		.global	initGPIO
 833              		.syntax unified
 834              		.code	16
 835              		.thumb_func
 837              	initGPIO:
 838              	.LFB47:
ARM GAS  C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s 			page 25


   1:Core/Src/main.c **** /*
   2:Core/Src/main.c **** Mogamad Saeed Solomon
   3:Core/Src/main.c **** SLMMOG032
   4:Core/Src/main.c **** EEE2046F Practical 4
   5:Core/Src/main.c **** */
   6:Core/Src/main.c **** 
   7:Core/Src/main.c **** #include "stm32f0xx.h"
   8:Core/Src/main.c **** #include <lcd_stm32f0.c>
   9:Core/Src/main.c **** 
  10:Core/Src/main.c **** // functions used within the program
  11:Core/Src/main.c **** void initGPIO(void);
  12:Core/Src/main.c **** void fdelay(void);
  13:Core/Src/main.c **** void firstDisplay(void);
  14:Core/Src/main.c **** void secondDisplay(void);
  15:Core/Src/main.c **** void thirdDisplay(void);
  16:Core/Src/main.c **** void checkPB(void);
  17:Core/Src/main.c **** void display(void);
  18:Core/Src/main.c **** 
  19:Core/Src/main.c **** // QUESTION (b)
  20:Core/Src/main.c **** #define DELAY1 1000
  21:Core/Src/main.c **** #define DELAY2 1000
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** // QUESTION (d)
  24:Core/Src/main.c **** // global variables to hold LED outputs
  25:Core/Src/main.c **** uint8_t bitPattern1 = 0x00;         // 0b 0000 0000
  26:Core/Src/main.c **** uint8_t bitPattern2 = 0xFF;         // 0b 1111 1111
  27:Core/Src/main.c **** uint8_t bitPattern3 = 0xAA;         // 0b 1010 1010
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** // pr- processor commands of QUESTION (e)
  30:Core/Src/main.c **** #define TRUE 1
  31:Core/Src/main.c **** #define FALSE 0
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** // QUESTION (f)
  34:Core/Src/main.c **** typedef uint8_t flag_t;         // new variable type
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** // QUESTION (g)
  37:Core/Src/main.c **** // global variables to mark specific flag events in program
  38:Core/Src/main.c **** flag_t startFlag = FALSE;
  39:Core/Src/main.c **** flag_t firstFlag = FALSE;
  40:Core/Src/main.c **** flag_t secondFlag = FALSE;
  41:Core/Src/main.c **** flag_t thirdFlag = FALSE;
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** // QUESTION (m)
  44:Core/Src/main.c **** int main(void) {
  45:Core/Src/main.c ****     initGPIO();         // call our initializing unctions to prepare out stm board
  46:Core/Src/main.c **** 
  47:Core/Src/main.c ****    while (1) {     // loops forever
  48:Core/Src/main.c ****      
  49:Core/Src/main.c ****         checkPB();  // checks which switch
  50:Core/Src/main.c ****         display();     // calls the display depending on which button was pressed
  51:Core/Src/main.c ****     }
  52:Core/Src/main.c ****     return 0;   
  53:Core/Src/main.c **** }
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** //QUESTION (a)
  56:Core/Src/main.c ****  void initGPIO(void) {
 839              		.loc 1 56 22 is_stmt 1 view -0
ARM GAS  C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s 			page 26


 840              		.cfi_startproc
 841              		@ args = 0, pretend = 0, frame = 0
 842              		@ frame_needed = 0, uses_anonymous_args = 0
 843              		@ link register save eliminated.
  57:Core/Src/main.c **** 
  58:Core/Src/main.c ****     // activate clock for push buttons and LEDs
  59:Core/Src/main.c ****     RCC ->AHBENR |= (RCC_AHBENR_GPIOAEN) | (RCC_AHBENR_GPIOBEN);
 844              		.loc 1 59 5 view .LVU216
 845              		.loc 1 59 9 is_stmt 0 view .LVU217
 846 0000 094A     		ldr	r2, .L54
 847 0002 5169     		ldr	r1, [r2, #20]
 848              		.loc 1 59 18 view .LVU218
 849 0004 C023     		movs	r3, #192
 850 0006 DB02     		lsls	r3, r3, #11
 851 0008 0B43     		orrs	r3, r1
 852 000a 5361     		str	r3, [r2, #20]
  60:Core/Src/main.c **** 
  61:Core/Src/main.c ****     // enable pull up resistors 
  62:Core/Src/main.c ****     // set them to 01
  63:Core/Src/main.c ****     GPIOA -> PUPDR = 0x55;
 853              		.loc 1 63 5 is_stmt 1 view .LVU219
 854              		.loc 1 63 20 is_stmt 0 view .LVU220
 855 000c 9023     		movs	r3, #144
 856 000e DB05     		lsls	r3, r3, #23
 857 0010 5522     		movs	r2, #85
 858 0012 DA60     		str	r2, [r3, #12]
  64:Core/Src/main.c ****   
  65:Core/Src/main.c ****     // initialize switches to input 00
  66:Core/Src/main.c ****     GPIOA -> MODER &= ~(GPIO_MODER_MODER0 |
 859              		.loc 1 66 5 is_stmt 1 view .LVU221
 860              		.loc 1 66 11 is_stmt 0 view .LVU222
 861 0014 1A68     		ldr	r2, [r3]
 862              		.loc 1 66 20 view .LVU223
 863 0016 FF21     		movs	r1, #255
 864 0018 8A43     		bics	r2, r1
 865 001a 1A60     		str	r2, [r3]
  67:Core/Src/main.c ****                         GPIO_MODER_MODER1 |
  68:Core/Src/main.c ****                         GPIO_MODER_MODER2 |
  69:Core/Src/main.c ****                         GPIO_MODER_MODER3 );
  70:Core/Src/main.c ****     
  71:Core/Src/main.c ****     // initializes LEDs to output 01
  72:Core/Src/main.c ****     GPIOB -> MODER = 0x5555;        // sets to 0b 0001 0101 0101 0101
 866              		.loc 1 72 5 is_stmt 1 view .LVU224
 867              		.loc 1 72 20 is_stmt 0 view .LVU225
 868 001c 034B     		ldr	r3, .L54+4
 869 001e 044A     		ldr	r2, .L54+8
 870 0020 1A60     		str	r2, [r3]
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****     // initialize LEDs to OFF
  75:Core/Src/main.c ****     GPIOB -> ODR = 0;
 871              		.loc 1 75 5 is_stmt 1 view .LVU226
 872              		.loc 1 75 18 is_stmt 0 view .LVU227
 873 0022 0022     		movs	r2, #0
 874 0024 5A61     		str	r2, [r3, #20]
  76:Core/Src/main.c **** }   
 875              		.loc 1 76 1 view .LVU228
 876              		@ sp needed
ARM GAS  C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s 			page 27


 877 0026 7047     		bx	lr
 878              	.L55:
 879              		.align	2
 880              	.L54:
 881 0028 00100240 		.word	1073876992
 882 002c 00040048 		.word	1207960576
 883 0030 55550000 		.word	21845
 884              		.cfi_endproc
 885              	.LFE47:
 887              		.section	.text.fdelay,"ax",%progbits
 888              		.align	1
 889              		.global	fdelay
 890              		.syntax unified
 891              		.code	16
 892              		.thumb_func
 894              	fdelay:
 895              	.LFB48:
  77:Core/Src/main.c **** 
  78:Core/Src/main.c **** void fdelay(void) {
 896              		.loc 1 78 19 is_stmt 1 view -0
 897              		.cfi_startproc
 898              		@ args = 0, pretend = 0, frame = 8
 899              		@ frame_needed = 0, uses_anonymous_args = 0
 900              		@ link register save eliminated.
 901 0000 82B0     		sub	sp, sp, #8
 902              		.cfi_def_cfa_offset 8
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****     for (volatile int i=0; i<DELAY1; i++) {
 903              		.loc 1 80 5 view .LVU230
 904              	.LBB2:
 905              		.loc 1 80 10 view .LVU231
 906              		.loc 1 80 23 is_stmt 0 view .LVU232
 907 0002 0023     		movs	r3, #0
 908 0004 0093     		str	r3, [sp]
 909              		.loc 1 80 5 view .LVU233
 910 0006 0AE0     		b	.L57
 911              	.L59:
 912              	.LBB3:
  81:Core/Src/main.c ****         for (volatile int j=0; j<DELAY2; j++) {
  82:Core/Src/main.c ****             // do nothing
  83:Core/Src/main.c ****         }
 913              		.loc 1 83 9 is_stmt 1 view .LVU234
  81:Core/Src/main.c ****         for (volatile int j=0; j<DELAY2; j++) {
 914              		.loc 1 81 43 discriminator 3 view .LVU235
 915 0008 019B     		ldr	r3, [sp, #4]
 916 000a 0133     		adds	r3, r3, #1
 917 000c 0193     		str	r3, [sp, #4]
 918              	.L58:
  81:Core/Src/main.c ****         for (volatile int j=0; j<DELAY2; j++) {
 919              		.loc 1 81 33 discriminator 1 view .LVU236
 920 000e 019A     		ldr	r2, [sp, #4]
 921 0010 FA23     		movs	r3, #250
 922 0012 9B00     		lsls	r3, r3, #2
 923 0014 9A42     		cmp	r2, r3
 924 0016 F7DB     		blt	.L59
 925              	.LBE3:
  80:Core/Src/main.c ****         for (volatile int j=0; j<DELAY2; j++) {
ARM GAS  C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s 			page 28


 926              		.loc 1 80 39 discriminator 2 view .LVU237
 927 0018 009B     		ldr	r3, [sp]
 928 001a 0133     		adds	r3, r3, #1
 929 001c 0093     		str	r3, [sp]
 930              	.L57:
  80:Core/Src/main.c ****         for (volatile int j=0; j<DELAY2; j++) {
 931              		.loc 1 80 29 discriminator 1 view .LVU238
 932 001e 009A     		ldr	r2, [sp]
 933 0020 FA23     		movs	r3, #250
 934 0022 9B00     		lsls	r3, r3, #2
 935 0024 9A42     		cmp	r2, r3
 936 0026 02DA     		bge	.L61
  81:Core/Src/main.c ****         for (volatile int j=0; j<DELAY2; j++) {
 937              		.loc 1 81 9 view .LVU239
 938              	.LBB4:
  81:Core/Src/main.c ****         for (volatile int j=0; j<DELAY2; j++) {
 939              		.loc 1 81 14 view .LVU240
  81:Core/Src/main.c ****         for (volatile int j=0; j<DELAY2; j++) {
 940              		.loc 1 81 27 is_stmt 0 view .LVU241
 941 0028 0023     		movs	r3, #0
 942 002a 0193     		str	r3, [sp, #4]
  81:Core/Src/main.c ****         for (volatile int j=0; j<DELAY2; j++) {
 943              		.loc 1 81 9 view .LVU242
 944 002c EFE7     		b	.L58
 945              	.L61:
 946              	.LBE4:
 947              	.LBE2:
  84:Core/Src/main.c ****     }
  85:Core/Src/main.c **** }
 948              		.loc 1 85 1 view .LVU243
 949 002e 02B0     		add	sp, sp, #8
 950              		@ sp needed
 951 0030 7047     		bx	lr
 952              		.cfi_endproc
 953              	.LFE48:
 955              		.section	.text.firstDisplay,"ax",%progbits
 956              		.align	1
 957              		.global	firstDisplay
 958              		.syntax unified
 959              		.code	16
 960              		.thumb_func
 962              	firstDisplay:
 963              	.LFB49:
  86:Core/Src/main.c **** 
  87:Core/Src/main.c **** // QUESTION (h)
  88:Core/Src/main.c **** void firstDisplay(void) {
 964              		.loc 1 88 25 is_stmt 1 view -0
 965              		.cfi_startproc
 966              		@ Volatile: function does not return.
 967              		@ args = 0, pretend = 0, frame = 0
 968              		@ frame_needed = 0, uses_anonymous_args = 0
 969 0000 10B5     		push	{r4, lr}
 970              		.cfi_def_cfa_offset 8
 971              		.cfi_offset 4, -8
 972              		.cfi_offset 14, -4
 973              	.L63:
  89:Core/Src/main.c **** 
ARM GAS  C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s 			page 29


  90:Core/Src/main.c ****     // loops forever 
  91:Core/Src/main.c ****     while (1) {
 974              		.loc 1 91 5 view .LVU245
  92:Core/Src/main.c ****         GPIOB -> ODR = bitPattern1;
 975              		.loc 1 92 9 view .LVU246
 976              		.loc 1 92 22 is_stmt 0 view .LVU247
 977 0002 084B     		ldr	r3, .L64
 978 0004 1B78     		ldrb	r3, [r3]
 979 0006 084C     		ldr	r4, .L64+4
 980 0008 6361     		str	r3, [r4, #20]
  93:Core/Src/main.c ****         fdelay();        // delays for 1s before implementing next pattern
 981              		.loc 1 93 9 is_stmt 1 view .LVU248
 982 000a FFF7FEFF 		bl	fdelay
 983              	.LVL34:
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****         GPIOB -> ODR = bitPattern2;
 984              		.loc 1 95 9 view .LVU249
 985              		.loc 1 95 22 is_stmt 0 view .LVU250
 986 000e 074B     		ldr	r3, .L64+8
 987 0010 1B78     		ldrb	r3, [r3]
 988 0012 6361     		str	r3, [r4, #20]
  96:Core/Src/main.c ****         fdelay();
 989              		.loc 1 96 9 is_stmt 1 view .LVU251
 990 0014 FFF7FEFF 		bl	fdelay
 991              	.LVL35:
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****         GPIOB -> ODR = bitPattern3;
 992              		.loc 1 98 9 view .LVU252
 993              		.loc 1 98 22 is_stmt 0 view .LVU253
 994 0018 054B     		ldr	r3, .L64+12
 995 001a 1B78     		ldrb	r3, [r3]
 996 001c 6361     		str	r3, [r4, #20]
  99:Core/Src/main.c ****         fdelay();
 997              		.loc 1 99 9 is_stmt 1 discriminator 1 view .LVU254
 998 001e FFF7FEFF 		bl	fdelay
 999              	.LVL36:
  91:Core/Src/main.c ****         GPIOB -> ODR = bitPattern1;
 1000              		.loc 1 91 11 view .LVU255
 1001 0022 EEE7     		b	.L63
 1002              	.L65:
 1003              		.align	2
 1004              	.L64:
 1005 0024 00000000 		.word	bitPattern1
 1006 0028 00040048 		.word	1207960576
 1007 002c 00000000 		.word	bitPattern2
 1008 0030 00000000 		.word	bitPattern3
 1009              		.cfi_endproc
 1010              	.LFE49:
 1012              		.section	.text.secondDisplay,"ax",%progbits
 1013              		.align	1
 1014              		.global	secondDisplay
 1015              		.syntax unified
 1016              		.code	16
 1017              		.thumb_func
 1019              	secondDisplay:
 1020              	.LFB50:
 100:Core/Src/main.c ****     }
ARM GAS  C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s 			page 30


 101:Core/Src/main.c **** }
 102:Core/Src/main.c **** 
 103:Core/Src/main.c **** // QUESTION (i)
 104:Core/Src/main.c **** void secondDisplay(void) {
 1021              		.loc 1 104 26 view -0
 1022              		.cfi_startproc
 1023              		@ Volatile: function does not return.
 1024              		@ args = 0, pretend = 0, frame = 0
 1025              		@ frame_needed = 0, uses_anonymous_args = 0
 1026 0000 10B5     		push	{r4, lr}
 1027              		.cfi_def_cfa_offset 8
 1028              		.cfi_offset 4, -8
 1029              		.cfi_offset 14, -4
 1030              	.L67:
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****     // loops forever
 107:Core/Src/main.c ****     while (1) {
 1031              		.loc 1 107 5 view .LVU257
 108:Core/Src/main.c ****     
 109:Core/Src/main.c ****         GPIOB -> ODR = 0b00000001;
 1032              		.loc 1 109 9 view .LVU258
 1033              		.loc 1 109 22 is_stmt 0 view .LVU259
 1034 0002 114C     		ldr	r4, .L68
 1035 0004 0123     		movs	r3, #1
 1036 0006 6361     		str	r3, [r4, #20]
 110:Core/Src/main.c ****         fdelay();
 1037              		.loc 1 110 9 is_stmt 1 view .LVU260
 1038 0008 FFF7FEFF 		bl	fdelay
 1039              	.LVL37:
 111:Core/Src/main.c ****         GPIOB -> ODR = 0b00000010;
 1040              		.loc 1 111 9 view .LVU261
 1041              		.loc 1 111 22 is_stmt 0 view .LVU262
 1042 000c 0223     		movs	r3, #2
 1043 000e 6361     		str	r3, [r4, #20]
 112:Core/Src/main.c ****         fdelay();
 1044              		.loc 1 112 9 is_stmt 1 view .LVU263
 1045 0010 FFF7FEFF 		bl	fdelay
 1046              	.LVL38:
 113:Core/Src/main.c ****         GPIOB -> ODR = 0b00000100;
 1047              		.loc 1 113 9 view .LVU264
 1048              		.loc 1 113 22 is_stmt 0 view .LVU265
 1049 0014 0423     		movs	r3, #4
 1050 0016 6361     		str	r3, [r4, #20]
 114:Core/Src/main.c ****         fdelay();
 1051              		.loc 1 114 9 is_stmt 1 view .LVU266
 1052 0018 FFF7FEFF 		bl	fdelay
 1053              	.LVL39:
 115:Core/Src/main.c ****         GPIOB -> ODR = 0b00001000;
 1054              		.loc 1 115 9 view .LVU267
 1055              		.loc 1 115 22 is_stmt 0 view .LVU268
 1056 001c 0823     		movs	r3, #8
 1057 001e 6361     		str	r3, [r4, #20]
 116:Core/Src/main.c ****         fdelay();
 1058              		.loc 1 116 9 is_stmt 1 view .LVU269
 1059 0020 FFF7FEFF 		bl	fdelay
 1060              	.LVL40:
 117:Core/Src/main.c ****         GPIOB -> ODR = 0b00010000;
ARM GAS  C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s 			page 31


 1061              		.loc 1 117 9 view .LVU270
 1062              		.loc 1 117 22 is_stmt 0 view .LVU271
 1063 0024 1023     		movs	r3, #16
 1064 0026 6361     		str	r3, [r4, #20]
 118:Core/Src/main.c ****         fdelay();
 1065              		.loc 1 118 9 is_stmt 1 view .LVU272
 1066 0028 FFF7FEFF 		bl	fdelay
 1067              	.LVL41:
 119:Core/Src/main.c ****         GPIOB -> ODR = 0b00100000;
 1068              		.loc 1 119 9 view .LVU273
 1069              		.loc 1 119 22 is_stmt 0 view .LVU274
 1070 002c 2023     		movs	r3, #32
 1071 002e 6361     		str	r3, [r4, #20]
 120:Core/Src/main.c ****         fdelay();
 1072              		.loc 1 120 9 is_stmt 1 view .LVU275
 1073 0030 FFF7FEFF 		bl	fdelay
 1074              	.LVL42:
 121:Core/Src/main.c ****         GPIOB -> ODR = 0b01000000;
 1075              		.loc 1 121 9 view .LVU276
 1076              		.loc 1 121 22 is_stmt 0 view .LVU277
 1077 0034 4023     		movs	r3, #64
 1078 0036 6361     		str	r3, [r4, #20]
 122:Core/Src/main.c ****         fdelay();
 1079              		.loc 1 122 9 is_stmt 1 view .LVU278
 1080 0038 FFF7FEFF 		bl	fdelay
 1081              	.LVL43:
 123:Core/Src/main.c ****         GPIOB -> ODR = 0b10000000;
 1082              		.loc 1 123 9 view .LVU279
 1083              		.loc 1 123 22 is_stmt 0 view .LVU280
 1084 003c 8023     		movs	r3, #128
 1085 003e 6361     		str	r3, [r4, #20]
 124:Core/Src/main.c ****         fdelay();
 1086              		.loc 1 124 9 is_stmt 1 discriminator 1 view .LVU281
 1087 0040 FFF7FEFF 		bl	fdelay
 1088              	.LVL44:
 107:Core/Src/main.c ****     
 1089              		.loc 1 107 11 view .LVU282
 1090 0044 DDE7     		b	.L67
 1091              	.L69:
 1092 0046 C046     		.align	2
 1093              	.L68:
 1094 0048 00040048 		.word	1207960576
 1095              		.cfi_endproc
 1096              	.LFE50:
 1098              		.section	.text.thirdDisplay,"ax",%progbits
 1099              		.align	1
 1100              		.global	thirdDisplay
 1101              		.syntax unified
 1102              		.code	16
 1103              		.thumb_func
 1105              	thirdDisplay:
 1106              	.LFB51:
 125:Core/Src/main.c ****     }
 126:Core/Src/main.c **** }
 127:Core/Src/main.c **** 
 128:Core/Src/main.c **** // QUESTION (j)
 129:Core/Src/main.c **** void thirdDisplay(void) {
ARM GAS  C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s 			page 32


 1107              		.loc 1 129 25 view -0
 1108              		.cfi_startproc
 1109              		@ args = 0, pretend = 0, frame = 0
 1110              		@ frame_needed = 0, uses_anonymous_args = 0
 1111 0000 10B5     		push	{r4, lr}
 1112              		.cfi_def_cfa_offset 8
 1113              		.cfi_offset 4, -8
 1114              		.cfi_offset 14, -4
 130:Core/Src/main.c **** 
 131:Core/Src/main.c ****     uint8_t k = 0;
 1115              		.loc 1 131 5 view .LVU284
 1116              	.LVL45:
 1117              		.loc 1 131 13 is_stmt 0 view .LVU285
 1118 0002 0024     		movs	r4, #0
 1119 0004 00E0     		b	.L71
 1120              	.LVL46:
 1121              	.L75:
 132:Core/Src/main.c **** 
 133:Core/Src/main.c ****     // loops forever
 134:Core/Src/main.c ****     while (1) {
 135:Core/Src/main.c ****         GPIOB -> ODR = k;             // displays binary value using LEDs
 136:Core/Src/main.c ****         fdelay();
 137:Core/Src/main.c ****         k ++;               // increment k
 138:Core/Src/main.c **** 
 139:Core/Src/main.c ****         // when our k reaches maximum number of 8 bit binary it resets k
 140:Core/Src/main.c ****         if (k == 255) {
 141:Core/Src/main.c ****             k = 0;
 1122              		.loc 1 141 15 view .LVU286
 1123 0006 0024     		movs	r4, #0
 1124              	.LVL47:
 1125              	.L71:
 134:Core/Src/main.c ****         GPIOB -> ODR = k;             // displays binary value using LEDs
 1126              		.loc 1 134 5 is_stmt 1 view .LVU287
 135:Core/Src/main.c ****         fdelay();
 1127              		.loc 1 135 9 view .LVU288
 135:Core/Src/main.c ****         fdelay();
 1128              		.loc 1 135 22 is_stmt 0 view .LVU289
 1129 0008 044B     		ldr	r3, .L76
 1130 000a 5C61     		str	r4, [r3, #20]
 136:Core/Src/main.c ****         k ++;               // increment k
 1131              		.loc 1 136 9 is_stmt 1 view .LVU290
 1132 000c FFF7FEFF 		bl	fdelay
 1133              	.LVL48:
 137:Core/Src/main.c **** 
 1134              		.loc 1 137 9 view .LVU291
 137:Core/Src/main.c **** 
 1135              		.loc 1 137 11 is_stmt 0 view .LVU292
 1136 0010 0134     		adds	r4, r4, #1
 1137              	.LVL49:
 137:Core/Src/main.c **** 
 1138              		.loc 1 137 11 view .LVU293
 1139 0012 E4B2     		uxtb	r4, r4
 1140              	.LVL50:
 140:Core/Src/main.c ****             k = 0;
 1141              		.loc 1 140 9 is_stmt 1 view .LVU294
 140:Core/Src/main.c ****             k = 0;
 1142              		.loc 1 140 12 is_stmt 0 view .LVU295
ARM GAS  C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s 			page 33


 1143 0014 FF2C     		cmp	r4, #255
 1144 0016 F7D1     		bne	.L71
 1145 0018 F5E7     		b	.L75
 1146              	.L77:
 1147 001a C046     		.align	2
 1148              	.L76:
 1149 001c 00040048 		.word	1207960576
 1150              		.cfi_endproc
 1151              	.LFE51:
 1153              		.section	.text.checkPB,"ax",%progbits
 1154              		.align	1
 1155              		.global	checkPB
 1156              		.syntax unified
 1157              		.code	16
 1158              		.thumb_func
 1160              	checkPB:
 1161              	.LFB52:
 142:Core/Src/main.c ****         }
 143:Core/Src/main.c ****     }
 144:Core/Src/main.c **** }
 145:Core/Src/main.c **** 
 146:Core/Src/main.c **** // QUESTION (k)
 147:Core/Src/main.c **** void checkPB(void) {
 1162              		.loc 1 147 20 is_stmt 1 view -0
 1163              		.cfi_startproc
 1164              		@ args = 0, pretend = 0, frame = 0
 1165              		@ frame_needed = 0, uses_anonymous_args = 0
 1166              		@ link register save eliminated.
 148:Core/Src/main.c **** 
 149:Core/Src/main.c ****     // checks which switch was pressed
 150:Core/Src/main.c ****     if ((GPIOA -> IDR & GPIO_IDR_0) == 0) {
 1167              		.loc 1 150 5 view .LVU297
 1168              		.loc 1 150 16 is_stmt 0 view .LVU298
 1169 0000 9023     		movs	r3, #144
 1170 0002 DB05     		lsls	r3, r3, #23
 1171 0004 1B69     		ldr	r3, [r3, #16]
 1172              		.loc 1 150 8 view .LVU299
 1173 0006 DB07     		lsls	r3, r3, #31
 1174 0008 0AD4     		bmi	.L79
 151:Core/Src/main.c ****         // SW0
 152:Core/Src/main.c ****         startFlag = TRUE;
 1175              		.loc 1 152 9 is_stmt 1 view .LVU300
 1176              		.loc 1 152 19 is_stmt 0 view .LVU301
 1177 000a 1D4B     		ldr	r3, .L84
 1178 000c 0122     		movs	r2, #1
 1179 000e 1A70     		strb	r2, [r3]
 153:Core/Src/main.c ****         firstFlag = FALSE;
 1180              		.loc 1 153 9 is_stmt 1 view .LVU302
 1181              		.loc 1 153 19 is_stmt 0 view .LVU303
 1182 0010 1C4A     		ldr	r2, .L84+4
 1183 0012 0023     		movs	r3, #0
 1184 0014 1370     		strb	r3, [r2]
 154:Core/Src/main.c ****         secondFlag = FALSE; 
 1185              		.loc 1 154 9 is_stmt 1 view .LVU304
 1186              		.loc 1 154 20 is_stmt 0 view .LVU305
 1187 0016 1C4A     		ldr	r2, .L84+8
 1188 0018 1370     		strb	r3, [r2]
ARM GAS  C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s 			page 34


 155:Core/Src/main.c ****         thirdFlag = FALSE;
 1189              		.loc 1 155 9 is_stmt 1 view .LVU306
 1190              		.loc 1 155 19 is_stmt 0 view .LVU307
 1191 001a 1C4A     		ldr	r2, .L84+12
 1192 001c 1370     		strb	r3, [r2]
 1193              	.L78:
 156:Core/Src/main.c ****     }
 157:Core/Src/main.c ****     else if ((GPIOA -> IDR & GPIO_IDR_1) == 0) {
 158:Core/Src/main.c ****         // SW1
 159:Core/Src/main.c ****         startFlag = TRUE; 
 160:Core/Src/main.c ****         firstFlag = TRUE; 
 161:Core/Src/main.c ****         secondFlag = FALSE; 
 162:Core/Src/main.c ****         thirdFlag = FALSE;
 163:Core/Src/main.c ****     }
 164:Core/Src/main.c ****     else if ((GPIOA -> IDR & GPIO_IDR_2) == 0) {
 165:Core/Src/main.c ****         // SW2
 166:Core/Src/main.c ****         startFlag = TRUE; 
 167:Core/Src/main.c ****         firstFlag = FALSE; 
 168:Core/Src/main.c ****         secondFlag = TRUE; 
 169:Core/Src/main.c ****         thirdFlag = FALSE;
 170:Core/Src/main.c ****     }
 171:Core/Src/main.c ****     else if ((GPIOA -> IDR & GPIO_IDR_3) == 0) {
 172:Core/Src/main.c ****         // SW3
 173:Core/Src/main.c ****         startFlag = TRUE; 
 174:Core/Src/main.c ****         firstFlag = FALSE; 
 175:Core/Src/main.c ****         secondFlag = FALSE; 
 176:Core/Src/main.c ****         thirdFlag = TRUE;
 177:Core/Src/main.c ****     }
 178:Core/Src/main.c **** }
 1194              		.loc 1 178 1 view .LVU308
 1195              		@ sp needed
 1196 001e 7047     		bx	lr
 1197              	.L79:
 157:Core/Src/main.c ****         // SW1
 1198              		.loc 1 157 10 is_stmt 1 view .LVU309
 157:Core/Src/main.c ****         // SW1
 1199              		.loc 1 157 21 is_stmt 0 view .LVU310
 1200 0020 9023     		movs	r3, #144
 1201 0022 DB05     		lsls	r3, r3, #23
 1202 0024 1B69     		ldr	r3, [r3, #16]
 157:Core/Src/main.c ****         // SW1
 1203              		.loc 1 157 13 view .LVU311
 1204 0026 9B07     		lsls	r3, r3, #30
 1205 0028 0AD4     		bmi	.L81
 159:Core/Src/main.c ****         firstFlag = TRUE; 
 1206              		.loc 1 159 9 is_stmt 1 view .LVU312
 159:Core/Src/main.c ****         firstFlag = TRUE; 
 1207              		.loc 1 159 19 is_stmt 0 view .LVU313
 1208 002a 154B     		ldr	r3, .L84
 1209 002c 0122     		movs	r2, #1
 1210 002e 1A70     		strb	r2, [r3]
 160:Core/Src/main.c ****         secondFlag = FALSE; 
 1211              		.loc 1 160 9 is_stmt 1 view .LVU314
 160:Core/Src/main.c ****         secondFlag = FALSE; 
 1212              		.loc 1 160 19 is_stmt 0 view .LVU315
 1213 0030 144B     		ldr	r3, .L84+4
 1214 0032 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s 			page 35


 161:Core/Src/main.c ****         thirdFlag = FALSE;
 1215              		.loc 1 161 9 is_stmt 1 view .LVU316
 161:Core/Src/main.c ****         thirdFlag = FALSE;
 1216              		.loc 1 161 20 is_stmt 0 view .LVU317
 1217 0034 144B     		ldr	r3, .L84+8
 1218 0036 0022     		movs	r2, #0
 1219 0038 1A70     		strb	r2, [r3]
 162:Core/Src/main.c ****     }
 1220              		.loc 1 162 9 is_stmt 1 view .LVU318
 162:Core/Src/main.c ****     }
 1221              		.loc 1 162 19 is_stmt 0 view .LVU319
 1222 003a 144B     		ldr	r3, .L84+12
 1223 003c 1A70     		strb	r2, [r3]
 1224 003e EEE7     		b	.L78
 1225              	.L81:
 164:Core/Src/main.c ****         // SW2
 1226              		.loc 1 164 10 is_stmt 1 view .LVU320
 164:Core/Src/main.c ****         // SW2
 1227              		.loc 1 164 21 is_stmt 0 view .LVU321
 1228 0040 9023     		movs	r3, #144
 1229 0042 DB05     		lsls	r3, r3, #23
 1230 0044 1B69     		ldr	r3, [r3, #16]
 164:Core/Src/main.c ****         // SW2
 1231              		.loc 1 164 13 view .LVU322
 1232 0046 5B07     		lsls	r3, r3, #29
 1233 0048 0AD4     		bmi	.L82
 166:Core/Src/main.c ****         firstFlag = FALSE; 
 1234              		.loc 1 166 9 is_stmt 1 view .LVU323
 166:Core/Src/main.c ****         firstFlag = FALSE; 
 1235              		.loc 1 166 19 is_stmt 0 view .LVU324
 1236 004a 0D4B     		ldr	r3, .L84
 1237 004c 0121     		movs	r1, #1
 1238 004e 1970     		strb	r1, [r3]
 167:Core/Src/main.c ****         secondFlag = TRUE; 
 1239              		.loc 1 167 9 is_stmt 1 view .LVU325
 167:Core/Src/main.c ****         secondFlag = TRUE; 
 1240              		.loc 1 167 19 is_stmt 0 view .LVU326
 1241 0050 0C4B     		ldr	r3, .L84+4
 1242 0052 0022     		movs	r2, #0
 1243 0054 1A70     		strb	r2, [r3]
 168:Core/Src/main.c ****         thirdFlag = FALSE;
 1244              		.loc 1 168 9 is_stmt 1 view .LVU327
 168:Core/Src/main.c ****         thirdFlag = FALSE;
 1245              		.loc 1 168 20 is_stmt 0 view .LVU328
 1246 0056 0C4B     		ldr	r3, .L84+8
 1247 0058 1970     		strb	r1, [r3]
 169:Core/Src/main.c ****     }
 1248              		.loc 1 169 9 is_stmt 1 view .LVU329
 169:Core/Src/main.c ****     }
 1249              		.loc 1 169 19 is_stmt 0 view .LVU330
 1250 005a 0C4B     		ldr	r3, .L84+12
 1251 005c 1A70     		strb	r2, [r3]
 1252 005e DEE7     		b	.L78
 1253              	.L82:
 171:Core/Src/main.c ****         // SW3
 1254              		.loc 1 171 10 is_stmt 1 view .LVU331
 171:Core/Src/main.c ****         // SW3
ARM GAS  C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s 			page 36


 1255              		.loc 1 171 21 is_stmt 0 view .LVU332
 1256 0060 9023     		movs	r3, #144
 1257 0062 DB05     		lsls	r3, r3, #23
 1258 0064 1B69     		ldr	r3, [r3, #16]
 171:Core/Src/main.c ****         // SW3
 1259              		.loc 1 171 13 view .LVU333
 1260 0066 1B07     		lsls	r3, r3, #28
 1261 0068 D9D4     		bmi	.L78
 173:Core/Src/main.c ****         firstFlag = FALSE; 
 1262              		.loc 1 173 9 is_stmt 1 view .LVU334
 173:Core/Src/main.c ****         firstFlag = FALSE; 
 1263              		.loc 1 173 19 is_stmt 0 view .LVU335
 1264 006a 054B     		ldr	r3, .L84
 1265 006c 0122     		movs	r2, #1
 1266 006e 1A70     		strb	r2, [r3]
 174:Core/Src/main.c ****         secondFlag = FALSE; 
 1267              		.loc 1 174 9 is_stmt 1 view .LVU336
 174:Core/Src/main.c ****         secondFlag = FALSE; 
 1268              		.loc 1 174 19 is_stmt 0 view .LVU337
 1269 0070 044B     		ldr	r3, .L84+4
 1270 0072 0021     		movs	r1, #0
 1271 0074 1970     		strb	r1, [r3]
 175:Core/Src/main.c ****         thirdFlag = TRUE;
 1272              		.loc 1 175 9 is_stmt 1 view .LVU338
 175:Core/Src/main.c ****         thirdFlag = TRUE;
 1273              		.loc 1 175 20 is_stmt 0 view .LVU339
 1274 0076 044B     		ldr	r3, .L84+8
 1275 0078 1970     		strb	r1, [r3]
 176:Core/Src/main.c ****     }
 1276              		.loc 1 176 9 is_stmt 1 view .LVU340
 176:Core/Src/main.c ****     }
 1277              		.loc 1 176 19 is_stmt 0 view .LVU341
 1278 007a 044B     		ldr	r3, .L84+12
 1279 007c 1A70     		strb	r2, [r3]
 1280              		.loc 1 178 1 view .LVU342
 1281 007e CEE7     		b	.L78
 1282              	.L85:
 1283              		.align	2
 1284              	.L84:
 1285 0080 00000000 		.word	startFlag
 1286 0084 00000000 		.word	firstFlag
 1287 0088 00000000 		.word	secondFlag
 1288 008c 00000000 		.word	thirdFlag
 1289              		.cfi_endproc
 1290              	.LFE52:
 1292              		.section	.text.display,"ax",%progbits
 1293              		.align	1
 1294              		.global	display
 1295              		.syntax unified
 1296              		.code	16
 1297              		.thumb_func
 1299              	display:
 1300              	.LFB53:
 179:Core/Src/main.c **** 
 180:Core/Src/main.c **** // QUESTION (l)
 181:Core/Src/main.c **** void display(void) {
 1301              		.loc 1 181 20 is_stmt 1 view -0
ARM GAS  C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s 			page 37


 1302              		.cfi_startproc
 1303              		@ args = 0, pretend = 0, frame = 0
 1304              		@ frame_needed = 0, uses_anonymous_args = 0
 1305 0000 10B5     		push	{r4, lr}
 1306              		.cfi_def_cfa_offset 8
 1307              		.cfi_offset 4, -8
 1308              		.cfi_offset 14, -4
 182:Core/Src/main.c **** 
 183:Core/Src/main.c ****     if (startFlag == TRUE && firstFlag == FALSE && secondFlag == FALSE && thirdFlag == FALSE) 
 1309              		.loc 1 183 5 view .LVU344
 1310              		.loc 1 183 19 is_stmt 0 view .LVU345
 1311 0002 134B     		ldr	r3, .L95
 1312 0004 1B78     		ldrb	r3, [r3]
 1313              		.loc 1 183 8 view .LVU346
 1314 0006 012B     		cmp	r3, #1
 1315 0008 0CD0     		beq	.L91
 1316              	.L87:
 184:Core/Src/main.c ****         GPIOB -> ODR = 1;           // only turns on LED 0
 185:Core/Src/main.c **** 
 186:Core/Src/main.c ****     if (firstFlag == TRUE ) firstDisplay();
 1317              		.loc 1 186 5 is_stmt 1 view .LVU347
 1318              		.loc 1 186 19 is_stmt 0 view .LVU348
 1319 000a 124B     		ldr	r3, .L95+4
 1320 000c 1B78     		ldrb	r3, [r3]
 1321              		.loc 1 186 8 view .LVU349
 1322 000e 012B     		cmp	r3, #1
 1323 0010 18D0     		beq	.L92
 187:Core/Src/main.c **** 
 188:Core/Src/main.c ****     if (secondFlag == TRUE) secondDisplay(); 
 1324              		.loc 1 188 5 is_stmt 1 view .LVU350
 1325              		.loc 1 188 20 is_stmt 0 view .LVU351
 1326 0012 114B     		ldr	r3, .L95+8
 1327 0014 1B78     		ldrb	r3, [r3]
 1328              		.loc 1 188 8 view .LVU352
 1329 0016 012B     		cmp	r3, #1
 1330 0018 16D0     		beq	.L93
 189:Core/Src/main.c **** 
 190:Core/Src/main.c ****     if (thirdFlag == TRUE) thirdDisplay();
 1331              		.loc 1 190 5 is_stmt 1 view .LVU353
 1332              		.loc 1 190 19 is_stmt 0 view .LVU354
 1333 001a 104B     		ldr	r3, .L95+12
 1334 001c 1B78     		ldrb	r3, [r3]
 1335              		.loc 1 190 8 view .LVU355
 1336 001e 012B     		cmp	r3, #1
 1337 0020 14D0     		beq	.L94
 191:Core/Src/main.c ****      
 192:Core/Src/main.c **** }...
 1338              		.loc 1 192 1 view .LVU356
 1339              		@ sp needed
 1340 0022 10BD     		pop	{r4, pc}
 1341              	.L91:
 183:Core/Src/main.c ****     if (startFlag == TRUE && firstFlag == FALSE && secondFlag == FALSE && thirdFlag == FALSE) 
 1342              		.loc 1 183 40 discriminator 1 view .LVU357
 1343 0024 0B4B     		ldr	r3, .L95+4
 1344 0026 1B78     		ldrb	r3, [r3]
 183:Core/Src/main.c ****     if (startFlag == TRUE && firstFlag == FALSE && secondFlag == FALSE && thirdFlag == FALSE) 
 1345              		.loc 1 183 27 discriminator 1 view .LVU358
ARM GAS  C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s 			page 38


 1346 0028 002B     		cmp	r3, #0
 1347 002a EED1     		bne	.L87
 183:Core/Src/main.c ****     if (startFlag == TRUE && firstFlag == FALSE && secondFlag == FALSE && thirdFlag == FALSE) 
 1348              		.loc 1 183 63 discriminator 2 view .LVU359
 1349 002c 0A4B     		ldr	r3, .L95+8
 1350 002e 1B78     		ldrb	r3, [r3]
 183:Core/Src/main.c ****     if (startFlag == TRUE && firstFlag == FALSE && secondFlag == FALSE && thirdFlag == FALSE) 
 1351              		.loc 1 183 49 discriminator 2 view .LVU360
 1352 0030 002B     		cmp	r3, #0
 1353 0032 EAD1     		bne	.L87
 183:Core/Src/main.c ****     if (startFlag == TRUE && firstFlag == FALSE && secondFlag == FALSE && thirdFlag == FALSE) 
 1354              		.loc 1 183 85 discriminator 3 view .LVU361
 1355 0034 094B     		ldr	r3, .L95+12
 1356 0036 1B78     		ldrb	r3, [r3]
 183:Core/Src/main.c ****     if (startFlag == TRUE && firstFlag == FALSE && secondFlag == FALSE && thirdFlag == FALSE) 
 1357              		.loc 1 183 72 discriminator 3 view .LVU362
 1358 0038 002B     		cmp	r3, #0
 1359 003a E6D1     		bne	.L87
 184:Core/Src/main.c ****         GPIOB -> ODR = 1;           // only turns on LED 0
 1360              		.loc 1 184 9 is_stmt 1 view .LVU363
 184:Core/Src/main.c ****         GPIOB -> ODR = 1;           // only turns on LED 0
 1361              		.loc 1 184 22 is_stmt 0 view .LVU364
 1362 003c 084B     		ldr	r3, .L95+16
 1363 003e 0122     		movs	r2, #1
 1364 0040 5A61     		str	r2, [r3, #20]
 1365 0042 E2E7     		b	.L87
 1366              	.L92:
 186:Core/Src/main.c ****     if (firstFlag == TRUE ) firstDisplay();
 1367              		.loc 1 186 29 is_stmt 1 discriminator 1 view .LVU365
 1368 0044 FFF7FEFF 		bl	firstDisplay
 1369              	.LVL51:
 1370              	.L93:
 188:Core/Src/main.c ****     if (secondFlag == TRUE) secondDisplay(); 
 1371              		.loc 1 188 29 discriminator 1 view .LVU366
 1372 0048 FFF7FEFF 		bl	secondDisplay
 1373              	.LVL52:
 1374              	.L94:
 190:Core/Src/main.c ****     if (thirdFlag == TRUE) thirdDisplay();
 1375              		.loc 1 190 28 discriminator 1 view .LVU367
 1376 004c FFF7FEFF 		bl	thirdDisplay
 1377              	.LVL53:
 1378              	.L96:
 1379              		.align	2
 1380              	.L95:
 1381 0050 00000000 		.word	startFlag
 1382 0054 00000000 		.word	firstFlag
 1383 0058 00000000 		.word	secondFlag
 1384 005c 00000000 		.word	thirdFlag
 1385 0060 00040048 		.word	1207960576
 1386              		.cfi_endproc
 1387              	.LFE53:
 1389              		.section	.text.main,"ax",%progbits
 1390              		.align	1
 1391              		.global	main
 1392              		.syntax unified
 1393              		.code	16
 1394              		.thumb_func
ARM GAS  C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s 			page 39


 1396              	main:
 1397              	.LFB46:
  44:Core/Src/main.c **** int main(void) {
 1398              		.loc 1 44 16 view -0
 1399              		.cfi_startproc
 1400              		@ Volatile: function does not return.
 1401              		@ args = 0, pretend = 0, frame = 0
 1402              		@ frame_needed = 0, uses_anonymous_args = 0
 1403 0000 10B5     		push	{r4, lr}
 1404              		.cfi_def_cfa_offset 8
 1405              		.cfi_offset 4, -8
 1406              		.cfi_offset 14, -4
  45:Core/Src/main.c ****     initGPIO();         // call our initializing unctions to prepare out stm board
 1407              		.loc 1 45 5 view .LVU369
 1408 0002 FFF7FEFF 		bl	initGPIO
 1409              	.LVL54:
 1410              	.L98:
  47:Core/Src/main.c ****    while (1) {     // loops forever
 1411              		.loc 1 47 4 view .LVU370
  49:Core/Src/main.c ****         checkPB();  // checks which switch
 1412              		.loc 1 49 9 view .LVU371
 1413 0006 FFF7FEFF 		bl	checkPB
 1414              	.LVL55:
  50:Core/Src/main.c ****         display();     // calls the display depending on which button was pressed
 1415              		.loc 1 50 9 discriminator 1 view .LVU372
 1416 000a FFF7FEFF 		bl	display
 1417              	.LVL56:
  47:Core/Src/main.c ****    while (1) {     // loops forever
 1418              		.loc 1 47 10 view .LVU373
 1419 000e FAE7     		b	.L98
 1420              		.cfi_endproc
 1421              	.LFE46:
 1423              		.global	thirdFlag
 1424              		.section	.bss.thirdFlag,"aw",%nobits
 1427              	thirdFlag:
 1428 0000 00       		.space	1
 1429              		.global	secondFlag
 1430              		.section	.bss.secondFlag,"aw",%nobits
 1433              	secondFlag:
 1434 0000 00       		.space	1
 1435              		.global	firstFlag
 1436              		.section	.bss.firstFlag,"aw",%nobits
 1439              	firstFlag:
 1440 0000 00       		.space	1
 1441              		.global	startFlag
 1442              		.section	.bss.startFlag,"aw",%nobits
 1445              	startFlag:
 1446 0000 00       		.space	1
 1447              		.global	bitPattern3
 1448              		.section	.data.bitPattern3,"aw"
 1451              	bitPattern3:
 1452 0000 AA       		.byte	-86
 1453              		.global	bitPattern2
 1454              		.section	.data.bitPattern2,"aw"
 1457              	bitPattern2:
 1458 0000 FF       		.byte	-1
 1459              		.global	bitPattern1
ARM GAS  C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s 			page 40


 1460              		.section	.bss.bitPattern1,"aw",%nobits
 1463              	bitPattern1:
 1464 0000 00       		.space	1
 1465              		.text
 1466              	.Letext0:
 1467              		.file 3 "C:/Users/Saeed/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-to
 1468              		.file 4 "C:/Users/Saeed/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-to
 1469              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f051x8.h"
ARM GAS  C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s 			page 41


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s:19     .text.delay:00000000 $t
C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s:25     .text.delay:00000000 delay
C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s:78     .text.pulse_strobe:00000000 $t
C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s:84     .text.pulse_strobe:00000000 pulse_strobe
C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s:137    .text.pulse_strobe:00000034 $d
C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s:142    .text.lcd_putchar:00000000 $t
C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s:148    .text.lcd_putchar:00000000 lcd_putchar
C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s:396    .text.lcd_putchar:0000011c $d
C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s:402    .text.lcd_putstring:00000000 $t
C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s:408    .text.lcd_putstring:00000000 lcd_putstring
C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s:459    .text.lcd_command:00000000 $t
C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s:465    .text.lcd_command:00000000 lcd_command
C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s:717    .text.lcd_command:00000124 $d
C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s:724    .text.init_LCD:00000000 $t
C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s:730    .text.init_LCD:00000000 init_LCD
C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s:823    .text.init_LCD:00000070 $d
C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s:831    .text.initGPIO:00000000 $t
C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s:837    .text.initGPIO:00000000 initGPIO
C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s:881    .text.initGPIO:00000028 $d
C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s:888    .text.fdelay:00000000 $t
C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s:894    .text.fdelay:00000000 fdelay
C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s:956    .text.firstDisplay:00000000 $t
C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s:962    .text.firstDisplay:00000000 firstDisplay
C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s:1005   .text.firstDisplay:00000024 $d
C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s:1463   .bss.bitPattern1:00000000 bitPattern1
C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s:1457   .data.bitPattern2:00000000 bitPattern2
C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s:1451   .data.bitPattern3:00000000 bitPattern3
C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s:1013   .text.secondDisplay:00000000 $t
C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s:1019   .text.secondDisplay:00000000 secondDisplay
C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s:1094   .text.secondDisplay:00000048 $d
C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s:1099   .text.thirdDisplay:00000000 $t
C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s:1105   .text.thirdDisplay:00000000 thirdDisplay
C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s:1149   .text.thirdDisplay:0000001c $d
C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s:1154   .text.checkPB:00000000 $t
C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s:1160   .text.checkPB:00000000 checkPB
C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s:1285   .text.checkPB:00000080 $d
C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s:1445   .bss.startFlag:00000000 startFlag
C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s:1439   .bss.firstFlag:00000000 firstFlag
C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s:1433   .bss.secondFlag:00000000 secondFlag
C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s:1427   .bss.thirdFlag:00000000 thirdFlag
C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s:1293   .text.display:00000000 $t
C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s:1299   .text.display:00000000 display
C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s:1381   .text.display:00000050 $d
C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s:1390   .text.main:00000000 $t
C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s:1396   .text.main:00000000 main
C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s:1428   .bss.thirdFlag:00000000 $d
C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s:1434   .bss.secondFlag:00000000 $d
C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s:1440   .bss.firstFlag:00000000 $d
C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s:1446   .bss.startFlag:00000000 $d
C:\Users\Saeed\AppData\Local\Temp\ccSWo8mt.s:1464   .bss.bitPattern1:00000000 $d

NO UNDEFINED SYMBOLS
